{"ast":null,"code":"var _jsxFileName = \"C:\\\\Agro-Vision\\\\frontend\\\\src\\\\pages\\\\FarmerCropPage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FarmerCropPage() {\n  _s();\n  var _weather$sys, _weather$main, _weather$weather, _weather$weather$, _weather$main2, _weather$wind, _weather$clouds, _weather$main3;\n  // Weather search state\n  const [searchArea, setSearchArea] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  const [weatherLoading, setWeatherLoading] = useState(false);\n  const [weatherError, setWeatherError] = useState(\"\");\n\n  // Weather API key (replace with your own OpenWeatherMap API key)\n  const WEATHER_API_KEY = \"YOUR_OPENWEATHERMAP_API_KEY\";\n  const handleWeatherSearch = async e => {\n    e.preventDefault();\n    setWeather(null);\n    setWeatherError(\"\");\n    setWeatherLoading(true);\n    try {\n      const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(searchArea)},bd&appid=${WEATHER_API_KEY}&units=metric`);\n      if (!res.ok) {\n        setWeatherError(\"Area not found or API error.\");\n        setWeatherLoading(false);\n        return;\n      }\n      const data = await res.json();\n      setWeather(data);\n    } catch (err) {\n      setWeatherError(\"Failed to fetch weather data.\");\n    } finally {\n      setWeatherLoading(false);\n    }\n  };\n  const {\n    user\n  } = useContext(AuthContext);\n  const [crops, setCrops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [form, setForm] = useState({\n    name: \"\",\n    land_size: \"\",\n    cultivate_date: \"\",\n    harvest_date: \"\",\n    total_cost: \"\",\n    crop_pic: \"\"\n  });\n  const [picPreview, setPicPreview] = useState(\"\");\n  const [formError, setFormError] = useState(\"\");\n  const [successMsg, setSuccessMsg] = useState(\"\");\n\n  // harvest modal state\n  const [harvestCrop, setHarvestCrop] = useState(null);\n  const [harvestForm, setHarvestForm] = useState({\n    quantity: \"\",\n    price: \"\"\n  });\n  const [harvestError, setHarvestError] = useState(\"\");\n  const [harvestSuccess, setHarvestSuccess] = useState(\"\");\n  const fetchCrops = async () => {\n    if (!user) return;\n    try {\n      const res = await fetch(`http://localhost:5000/api/crops/farmer/${user.id}`, {\n        credentials: \"include\"\n      });\n      const data = await res.json();\n      setCrops(data);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchCrops();\n  }, [user]);\n  const handleChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value\n  });\n  const handlePicChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setForm(f => ({\n          ...f,\n          crop_pic: reader.result\n        }));\n        setPicPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleAddCrop = async e => {\n    e.preventDefault();\n    setFormError(\"\");\n    setSuccessMsg(\"\");\n    if (!user) {\n      setFormError(\"User not logged in\");\n      return;\n    }\n    // Validation\n    if (!form.name || !form.land_size || !form.cultivate_date || !form.harvest_date || !form.total_cost) {\n      setFormError(\"All fields are required.\");\n      return;\n    }\n    if (isNaN(form.land_size) || Number(form.land_size) <= 0) {\n      setFormError(\"Land size must be a positive number.\");\n      return;\n    }\n    if (isNaN(form.total_cost) || Number(form.total_cost) < 0) {\n      setFormError(\"Total cost must be a non-negative number.\");\n      return;\n    }\n    try {\n      const res = await fetch(`http://localhost:5000/api/crops`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          ...form,\n          farmer_id: user.id\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data.message || \"Failed to add crop\");\n      setForm({\n        name: \"\",\n        land_size: \"\",\n        cultivate_date: \"\",\n        harvest_date: \"\",\n        total_cost: \"\",\n        crop_pic: \"\"\n      });\n      setPicPreview(\"\");\n      setSuccessMsg(\"Crop added successfully!\");\n      fetchCrops();\n    } catch (err) {\n      setFormError(\"Error adding crop: \" + err.message);\n    }\n  };\n  const handleDeleteCrop = async cropId => {\n    if (!window.confirm(\"Are you sure you want to delete this crop? This action cannot be undone.\")) return;\n    try {\n      // Try /api/crops/:cropId first\n      let res = await fetch(`http://localhost:5000/api/crops/${cropId}`, {\n        method: \"DELETE\",\n        credentials: \"include\"\n      });\n      // If 404, try /api/crops/delete/:cropId\n      if (res.status === 404) {\n        res = await fetch(`http://localhost:5000/api/crops/delete/${cropId}`, {\n          method: \"DELETE\",\n          credentials: \"include\"\n        });\n      }\n      if (!res.ok) {\n        const data = await res.json();\n        alert(\"Error deleting crop: \" + (data.message || \"Unknown error\"));\n        return;\n      }\n      fetchCrops();\n      alert(\"Crop deleted!\");\n    } catch (err) {\n      alert(\"Error deleting crop: \" + err.message);\n    }\n  };\n  const handleUpdateCrop = async (cropId, updatedFields) => {\n    if (!updatedFields.total_cost || isNaN(updatedFields.total_cost) || Number(updatedFields.total_cost) < 0) {\n      alert(\"Total cost must be a non-negative number.\");\n      return;\n    }\n    if (!window.confirm(\"Are you sure you want to update the cost?\")) return;\n    try {\n      const res = await fetch(`http://localhost:5000/api/crops/${cropId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify(updatedFields)\n      });\n      if (!res.ok) {\n        const data = await res.json();\n        alert(\"Error updating crop: \" + (data.message || \"Unknown error\"));\n        return;\n      }\n      fetchCrops();\n      alert(\"Crop cost updated!\");\n    } catch (err) {\n      alert(\"Error updating crop: \" + err.message);\n    }\n  };\n  const handleHarvestSubmit = async e => {\n    e.preventDefault();\n    setHarvestError(\"\");\n    setHarvestSuccess(\"\");\n    if (!harvestCrop) return;\n    // Validation\n    if (!harvestForm.quantity || isNaN(harvestForm.quantity) || Number(harvestForm.quantity) <= 0) {\n      setHarvestError(\"Quantity must be a positive number.\");\n      return;\n    }\n    if (!harvestForm.price || isNaN(harvestForm.price) || Number(harvestForm.price) < 0) {\n      setHarvestError(\"Price must be a non-negative number.\");\n      return;\n    }\n    try {\n      const res = await fetch(`http://localhost:5000/api/marketplace/harvest/${harvestCrop.id}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          price: harvestForm.price,\n          quantity: harvestForm.quantity\n        })\n      });\n      if (!res.ok) {\n        const data = await res.json();\n        setHarvestError(\"Error adding to marketplace: \" + (data.message || \"Unknown error\"));\n        return;\n      }\n      setHarvestSuccess(\"Crop added to marketplace!\");\n      setHarvestForm({\n        quantity: \"\",\n        price: \"\"\n      });\n      fetchCrops();\n      // Auto-close modal after short delay\n      setTimeout(() => {\n        setHarvestCrop(null);\n        setHarvestSuccess(\"\");\n      }, 1200);\n    } catch (err) {\n      setHarvestError(\"Error adding to marketplace: \" + err.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading crops...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"farmer-crop-bg\",\n    style: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #e0f7fa 0%, #f9fbe7 100%)',\n      padding: '32px 0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 500,\n        margin: '0 auto 32px auto',\n        background: '#fff',\n        borderRadius: 12,\n        boxShadow: '0 2px 8px #b2dfdb',\n        padding: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleWeatherSearch,\n        style: {\n          display: 'flex',\n          gap: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search area/city for weather...\",\n          value: searchArea,\n          onChange: e => setSearchArea(e.target.value),\n          style: {\n            flex: 1,\n            padding: '10px 14px',\n            borderRadius: 8,\n            border: '1px solid #b2dfdb',\n            fontSize: 16\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            background: '#26c6da',\n            color: '#fff',\n            border: 'none',\n            borderRadius: 8,\n            padding: '10px 24px',\n            fontWeight: 'bold',\n            fontSize: 16,\n            cursor: 'pointer'\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), weatherLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12\n        },\n        children: \"Loading weather...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 28\n      }, this), weatherError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12,\n          color: 'red'\n        },\n        children: weatherError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 26\n      }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 18,\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: 8\n          },\n          children: [\"Weather in \", weather.name, \", \", (_weather$sys = weather.sys) === null || _weather$sys === void 0 ? void 0 : _weather$sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Temperature:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 16\n          }, this), \" \", (_weather$main = weather.main) === null || _weather$main === void 0 ? void 0 : _weather$main.temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Condition:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 16\n          }, this), \" \", (_weather$weather = weather.weather) === null || _weather$weather === void 0 ? void 0 : (_weather$weather$ = _weather$weather[0]) === null || _weather$weather$ === void 0 ? void 0 : _weather$weather$.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Humidity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 16\n          }, this), \" \", (_weather$main2 = weather.main) === null || _weather$main2 === void 0 ? void 0 : _weather$main2.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Wind:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 16\n          }, this), \" \", (_weather$wind = weather.wind) === null || _weather$wind === void 0 ? void 0 : _weather$wind.speed, \" m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Clouds:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 16\n          }, this), \" \", (_weather$clouds = weather.clouds) === null || _weather$clouds === void 0 ? void 0 : _weather$clouds.all, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Pressure:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 16\n          }, this), \" \", (_weather$main3 = weather.main) === null || _weather$main3 === void 0 ? void 0 : _weather$main3.pressure, \" hPa\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddCrop,\n      className: \"mb-6 p-4 border rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-bold mb-2\",\n        children: \"Add New Crop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), formError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-box\",\n        children: formError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 23\n      }, this), successMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toast-success\",\n        children: successMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        placeholder: \"Crop Name\",\n        value: form.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handlePicChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 3\n      }, this), picPreview && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: picPreview,\n        alt: \"Preview\",\n        style: {\n          maxWidth: 100,\n          marginBottom: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"land_size\",\n        placeholder: \"Land Size (acre)\",\n        value: form.land_size,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"cultivate_date\",\n        type: \"date\",\n        value: form.cultivate_date,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"harvest_date\",\n        type: \"date\",\n        value: form.harvest_date,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"total_cost\",\n        type: \"number\",\n        placeholder: \"Total Cost\",\n        value: form.total_cost,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-2 bg-green-500 text-white px-3 py-1 rounded\",\n        children: \"Add Crop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-bold mb-2\",\n      children: \"My Crops\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), crops.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No crops added yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-4\",\n      children: crops.map(crop => {\n        // Calculate growth percentage\n        let percent = 0;\n        if (crop.cultivate_date && crop.harvest_date) {\n          const start = new Date(crop.cultivate_date);\n          const end = new Date(crop.harvest_date);\n          const now = new Date();\n          if (end > start) {\n            const totalDays = (end - start) / (1000 * 60 * 60 * 24);\n            const elapsedDays = (now - start) / (1000 * 60 * 60 * 24);\n            percent = Math.min(100, Math.max(0, (elapsedDays / totalDays * 100).toFixed(2)));\n          }\n        }\n        const canHarvest = percent >= 80;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 border rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: crop.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this), crop.crop_pic && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: crop.crop_pic,\n            alt: \"Crop\",\n            style: {\n              maxWidth: 100,\n              marginBottom: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Land: \", crop.land_size, \" acre\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Cultivate: \", crop.cultivate_date, \" | Harvest: \", crop.harvest_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Cost: \", crop.total_cost, \" Tk\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"highlight\",\n              children: [percent, \"% grown\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 28\n            }, this), \" \", percent < 80 && \"(Cannot harvest before 80%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const newCost = prompt(\"Update total cost:\", crop.total_cost);\n              if (newCost !== null && newCost !== \"\") handleUpdateCrop(crop.id, {\n                total_cost: newCost\n              });\n            },\n            className: \"mr-2 bg-yellow-500 text-white px-2 py-1 rounded\",\n            children: \"Update Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteCrop(crop.id),\n            className: \"mr-2 bg-red-500 text-white px-2 py-1 rounded\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setHarvestCrop(crop),\n            className: \"bg-blue-500 text-white px-2 py-1 rounded\",\n            disabled: !canHarvest,\n            title: !canHarvest ? \"You can only harvest when crop is at least 80% grown.\" : \"Harvest\",\n            children: \"Harvest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this)]\n        }, crop.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), harvestCrop && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => setHarvestCrop(null),\n          style: {\n            float: 'right'\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Harvest \", harvestCrop.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), harvestError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-box\",\n          children: harvestError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 30\n        }, this), harvestSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toast-success\",\n          children: harvestSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleHarvestSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Quantity\",\n            value: harvestForm.quantity,\n            onChange: e => setHarvestForm({\n              ...harvestForm,\n              quantity: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Price per unit/kg\",\n            value: harvestForm.price,\n            onChange: e => setHarvestForm({\n              ...harvestForm,\n              price: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setHarvestCrop(null),\n              className: \"cancel-btn\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"confirm-btn\",\n              children: \"Add to Marketplace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n}\n_s(FarmerCropPage, \"4qjSrcjn8PznDjnQHiyOeMGaIU0=\");\n_c = FarmerCropPage;\nvar _c;\n$RefreshReg$(_c, \"FarmerCropPage\");","map":{"version":3,"names":["useEffect","useState","useContext","AuthContext","jsxDEV","_jsxDEV","FarmerCropPage","_s","_weather$sys","_weather$main","_weather$weather","_weather$weather$","_weather$main2","_weather$wind","_weather$clouds","_weather$main3","searchArea","setSearchArea","weather","setWeather","weatherLoading","setWeatherLoading","weatherError","setWeatherError","WEATHER_API_KEY","handleWeatherSearch","e","preventDefault","res","fetch","encodeURIComponent","ok","data","json","err","user","crops","setCrops","loading","setLoading","form","setForm","name","land_size","cultivate_date","harvest_date","total_cost","crop_pic","picPreview","setPicPreview","formError","setFormError","successMsg","setSuccessMsg","harvestCrop","setHarvestCrop","harvestForm","setHarvestForm","quantity","price","harvestError","setHarvestError","harvestSuccess","setHarvestSuccess","fetchCrops","id","credentials","console","error","handleChange","target","value","handlePicChange","file","files","reader","FileReader","onloadend","f","result","readAsDataURL","handleAddCrop","isNaN","Number","method","headers","body","JSON","stringify","farmer_id","Error","message","handleDeleteCrop","cropId","window","confirm","status","alert","handleUpdateCrop","updatedFields","handleHarvestSubmit","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","minHeight","background","padding","maxWidth","margin","borderRadius","boxShadow","onSubmit","display","gap","type","placeholder","onChange","flex","border","fontSize","required","color","fontWeight","cursor","marginTop","textAlign","marginBottom","sys","country","main","temp","description","humidity","wind","speed","clouds","all","pressure","accept","src","alt","length","map","crop","percent","start","Date","end","now","totalDays","elapsedDays","Math","min","max","toFixed","canHarvest","onClick","newCost","prompt","disabled","title","float","_c","$RefreshReg$"],"sources":["C:/Agro-Vision/frontend/src/pages/FarmerCropPage.jsx"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport default function FarmerCropPage() {\r\n  // Weather search state\r\n  const [searchArea, setSearchArea] = useState(\"\");\r\n  const [weather, setWeather] = useState(null);\r\n  const [weatherLoading, setWeatherLoading] = useState(false);\r\n  const [weatherError, setWeatherError] = useState(\"\");\r\n\r\n  // Weather API key (replace with your own OpenWeatherMap API key)\r\n  const WEATHER_API_KEY = \"YOUR_OPENWEATHERMAP_API_KEY\";\r\n\r\n  const handleWeatherSearch = async (e) => {\r\n    e.preventDefault();\r\n    setWeather(null);\r\n    setWeatherError(\"\");\r\n    setWeatherLoading(true);\r\n    try {\r\n      const res = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(searchArea)},bd&appid=${WEATHER_API_KEY}&units=metric`\r\n      );\r\n      if (!res.ok) {\r\n        setWeatherError(\"Area not found or API error.\");\r\n        setWeatherLoading(false);\r\n        return;\r\n      }\r\n      const data = await res.json();\r\n      setWeather(data);\r\n    } catch (err) {\r\n      setWeatherError(\"Failed to fetch weather data.\");\r\n    } finally {\r\n      setWeatherLoading(false);\r\n    }\r\n  };\r\n  const { user } = useContext(AuthContext);\r\n  const [crops, setCrops] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    land_size: \"\",\r\n    cultivate_date: \"\",\r\n    harvest_date: \"\",\r\n    total_cost: \"\",\r\n    crop_pic: \"\"\r\n  });\r\n  const [picPreview, setPicPreview] = useState(\"\");\r\n  const [formError, setFormError] = useState(\"\");\r\n  const [successMsg, setSuccessMsg] = useState(\"\");\r\n\r\n  // harvest modal state\r\n  const [harvestCrop, setHarvestCrop] = useState(null);\r\n  const [harvestForm, setHarvestForm] = useState({\r\n    quantity: \"\",\r\n    price: \"\",\r\n  });\r\n  const [harvestError, setHarvestError] = useState(\"\");\r\n  const [harvestSuccess, setHarvestSuccess] = useState(\"\");\r\n\r\n  const fetchCrops = async () => {\r\n    if (!user) return;\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/crops/farmer/${user.id}`, {\r\n        credentials: \"include\",\r\n      });\r\n      const data = await res.json();\r\n      setCrops(data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCrops();\r\n  }, [user]);\r\n\r\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  const handlePicChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setForm(f => ({ ...f, crop_pic: reader.result }));\r\n        setPicPreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleAddCrop = async (e) => {\r\n    e.preventDefault();\r\n    setFormError(\"\");\r\n    setSuccessMsg(\"\");\r\n    if (!user) {\r\n      setFormError(\"User not logged in\");\r\n      return;\r\n    }\r\n    // Validation\r\n    if (!form.name || !form.land_size || !form.cultivate_date || !form.harvest_date || !form.total_cost) {\r\n      setFormError(\"All fields are required.\");\r\n      return;\r\n    }\r\n    if (isNaN(form.land_size) || Number(form.land_size) <= 0) {\r\n      setFormError(\"Land size must be a positive number.\");\r\n      return;\r\n    }\r\n    if (isNaN(form.total_cost) || Number(form.total_cost) < 0) {\r\n      setFormError(\"Total cost must be a non-negative number.\");\r\n      return;\r\n    }\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/crops`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({ ...form, farmer_id: user.id }),\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.message || \"Failed to add crop\");\r\n      setForm({\r\n        name: \"\",\r\n        land_size: \"\",\r\n        cultivate_date: \"\",\r\n        harvest_date: \"\",\r\n        total_cost: \"\",\r\n        crop_pic: \"\"\r\n      });\r\n      setPicPreview(\"\");\r\n      setSuccessMsg(\"Crop added successfully!\");\r\n      fetchCrops();\r\n    } catch (err) {\r\n      setFormError(\"Error adding crop: \" + err.message);\r\n    }\r\n  };\r\n  const handleDeleteCrop = async (cropId) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this crop? This action cannot be undone.\")) return;\r\n    try {\r\n      // Try /api/crops/:cropId first\r\n      let res = await fetch(`http://localhost:5000/api/crops/${cropId}`, {\r\n        method: \"DELETE\",\r\n        credentials: \"include\"\r\n      });\r\n      // If 404, try /api/crops/delete/:cropId\r\n      if (res.status === 404) {\r\n        res = await fetch(`http://localhost:5000/api/crops/delete/${cropId}`, {\r\n          method: \"DELETE\",\r\n          credentials: \"include\"\r\n        });\r\n      }\r\n      if (!res.ok) {\r\n        const data = await res.json();\r\n        alert(\"Error deleting crop: \" + (data.message || \"Unknown error\"));\r\n        return;\r\n      }\r\n      fetchCrops();\r\n      alert(\"Crop deleted!\");\r\n    } catch (err) {\r\n      alert(\"Error deleting crop: \" + err.message);\r\n    }\r\n  };\r\n\r\n  const handleUpdateCrop = async (cropId, updatedFields) => {\r\n    if (!updatedFields.total_cost || isNaN(updatedFields.total_cost) || Number(updatedFields.total_cost) < 0) {\r\n      alert(\"Total cost must be a non-negative number.\");\r\n      return;\r\n    }\r\n    if (!window.confirm(\"Are you sure you want to update the cost?\")) return;\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/crops/${cropId}`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(updatedFields),\r\n      });\r\n      if (!res.ok) {\r\n        const data = await res.json();\r\n        alert(\"Error updating crop: \" + (data.message || \"Unknown error\"));\r\n        return;\r\n      }\r\n      fetchCrops();\r\n      alert(\"Crop cost updated!\");\r\n    } catch (err) {\r\n      alert(\"Error updating crop: \" + err.message);\r\n    }\r\n  };\r\n\r\n  const handleHarvestSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setHarvestError(\"\");\r\n    setHarvestSuccess(\"\");\r\n    if (!harvestCrop) return;\r\n    // Validation\r\n    if (!harvestForm.quantity || isNaN(harvestForm.quantity) || Number(harvestForm.quantity) <= 0) {\r\n      setHarvestError(\"Quantity must be a positive number.\");\r\n      return;\r\n    }\r\n    if (!harvestForm.price || isNaN(harvestForm.price) || Number(harvestForm.price) < 0) {\r\n      setHarvestError(\"Price must be a non-negative number.\");\r\n      return;\r\n    }\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/marketplace/harvest/${harvestCrop.id}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({\r\n          price: harvestForm.price,\r\n          quantity: harvestForm.quantity\r\n        }),\r\n      });\r\n      if (!res.ok) {\r\n        const data = await res.json();\r\n        setHarvestError(\"Error adding to marketplace: \" + (data.message || \"Unknown error\"));\r\n        return;\r\n      }\r\n      setHarvestSuccess(\"Crop added to marketplace!\");\r\n      setHarvestForm({ quantity: \"\", price: \"\" });\r\n      fetchCrops();\r\n      // Auto-close modal after short delay\r\n      setTimeout(() => {\r\n        setHarvestCrop(null);\r\n        setHarvestSuccess(\"\");\r\n      }, 1200);\r\n    } catch (err) {\r\n      setHarvestError(\"Error adding to marketplace: \" + err.message);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading crops...</p>;\r\n\r\n  return (\r\n    <div className=\"farmer-crop-bg\" style={{\r\n      minHeight: '100vh',\r\n      background: 'linear-gradient(135deg, #e0f7fa 0%, #f9fbe7 100%)',\r\n      padding: '32px 0'\r\n    }}>\r\n      {/* Area Weather Search Bar */}\r\n      <div style={{ maxWidth: 500, margin: '0 auto 32px auto', background: '#fff', borderRadius: 12, boxShadow: '0 2px 8px #b2dfdb', padding: 24 }}>\r\n        <form onSubmit={handleWeatherSearch} style={{ display: 'flex', gap: 12 }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search area/city for weather...\"\r\n            value={searchArea}\r\n            onChange={e => setSearchArea(e.target.value)}\r\n            style={{ flex: 1, padding: '10px 14px', borderRadius: 8, border: '1px solid #b2dfdb', fontSize: 16 }}\r\n            required\r\n          />\r\n          <button type=\"submit\" style={{ background: '#26c6da', color: '#fff', border: 'none', borderRadius: 8, padding: '10px 24px', fontWeight: 'bold', fontSize: 16, cursor: 'pointer' }}>\r\n            Search\r\n          </button>\r\n        </form>\r\n        {weatherLoading && <div style={{ marginTop: 12 }}>Loading weather...</div>}\r\n        {weatherError && <div style={{ marginTop: 12, color: 'red' }}>{weatherError}</div>}\r\n        {weather && (\r\n          <div style={{ marginTop: 18, textAlign: 'left' }}>\r\n            <h3 style={{ marginBottom: 8 }}>Weather in {weather.name}, {weather.sys?.country}</h3>\r\n            <p><strong>Temperature:</strong> {weather.main?.temp}°C</p>\r\n            <p><strong>Condition:</strong> {weather.weather?.[0]?.description}</p>\r\n            <p><strong>Humidity:</strong> {weather.main?.humidity}%</p>\r\n            <p><strong>Wind:</strong> {weather.wind?.speed} m/s</p>\r\n            <p><strong>Clouds:</strong> {weather.clouds?.all}%</p>\r\n            <p><strong>Pressure:</strong> {weather.main?.pressure} hPa</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {/* Add Crop Form */}\r\n      <form onSubmit={handleAddCrop} className=\"mb-6 p-4 border rounded\">\r\n        <h3 className=\"font-bold mb-2\">Add New Crop</h3>\r\n        {formError && <div className=\"error-box\">{formError}</div>}\r\n        {successMsg && <div className=\"toast-success\">{successMsg}</div>}\r\n  <input name=\"name\" placeholder=\"Crop Name\" value={form.name} onChange={handleChange} required />\r\n  <input type=\"file\" accept=\"image/*\" onChange={handlePicChange} />\r\n  {picPreview && <img src={picPreview} alt=\"Preview\" style={{maxWidth:100, marginBottom:8}} />}\r\n        <input name=\"land_size\" placeholder=\"Land Size (acre)\" value={form.land_size} onChange={handleChange} required />\r\n        <input name=\"cultivate_date\" type=\"date\" value={form.cultivate_date} onChange={handleChange} required />\r\n        <input name=\"harvest_date\" type=\"date\" value={form.harvest_date} onChange={handleChange} required />\r\n        <input name=\"total_cost\" type=\"number\" placeholder=\"Total Cost\" value={form.total_cost} onChange={handleChange} required />\r\n        <button type=\"submit\" className=\"mt-2 bg-green-500 text-white px-3 py-1 rounded\">Add Crop</button>\r\n      </form>\r\n\r\n      {/* Crop List */}\r\n      <h3 className=\"font-bold mb-2\">My Crops</h3>\r\n      {crops.length === 0 ? (\r\n        <p>No crops added yet.</p>\r\n      ) : (\r\n        <div className=\"grid gap-4\">\r\n          {crops.map((crop) => {\r\n            // Calculate growth percentage\r\n            let percent = 0;\r\n            if (crop.cultivate_date && crop.harvest_date) {\r\n              const start = new Date(crop.cultivate_date);\r\n              const end = new Date(crop.harvest_date);\r\n              const now = new Date();\r\n              if (end > start) {\r\n                const totalDays = (end - start) / (1000 * 60 * 60 * 24);\r\n                const elapsedDays = (now - start) / (1000 * 60 * 60 * 24);\r\n                percent = Math.min(100, Math.max(0, ((elapsedDays / totalDays) * 100).toFixed(2)));\r\n              }\r\n            }\r\n            const canHarvest = percent >= 80;\r\n            return (\r\n              <div key={crop.id} className=\"p-3 border rounded\">\r\n                <p><strong>{crop.name}</strong></p>\r\n                {crop.crop_pic && <img src={crop.crop_pic} alt=\"Crop\" style={{maxWidth:100, marginBottom:8}} />}\r\n                <p>Land: {crop.land_size} acre</p>\r\n                <p>Cultivate: {crop.cultivate_date} | Harvest: {crop.harvest_date}</p>\r\n                <p>Total Cost: {crop.total_cost} Tk</p>\r\n                <p>Status: <span className=\"highlight\">{percent}% grown</span> {percent < 80 && \"(Cannot harvest before 80%)\"}</p>\r\n                <button\r\n                  onClick={() => {\r\n                    const newCost = prompt(\"Update total cost:\", crop.total_cost);\r\n                    if (newCost !== null && newCost !== \"\") handleUpdateCrop(crop.id, { total_cost: newCost });\r\n                  }}\r\n                  className=\"mr-2 bg-yellow-500 text-white px-2 py-1 rounded\"\r\n                >\r\n                  Update Cost\r\n                </button>\r\n                <button\r\n                  onClick={() => handleDeleteCrop(crop.id)}\r\n                  className=\"mr-2 bg-red-500 text-white px-2 py-1 rounded\"\r\n                >\r\n                  Delete\r\n                </button>\r\n                <button\r\n                  onClick={() => setHarvestCrop(crop)}\r\n                  className=\"bg-blue-500 text-white px-2 py-1 rounded\"\r\n                  disabled={!canHarvest}\r\n                  title={!canHarvest ? \"You can only harvest when crop is at least 80% grown.\" : \"Harvest\"}\r\n                >\r\n                  Harvest\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      {/* Harvest Modal */}\r\n      {harvestCrop && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-box\">\r\n            <button className=\"close-btn\" onClick={() => setHarvestCrop(null)} style={{float:'right'}}>×</button>\r\n            <h3>Harvest {harvestCrop.name}</h3>\r\n            {harvestError && <div className=\"error-box\">{harvestError}</div>}\r\n            {harvestSuccess && <div className=\"toast-success\">{harvestSuccess}</div>}\r\n            <form onSubmit={handleHarvestSubmit}>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Quantity\"\r\n                value={harvestForm.quantity}\r\n                onChange={(e) => setHarvestForm({ ...harvestForm, quantity: e.target.value })}\r\n                required\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Price per unit/kg\"\r\n                value={harvestForm.price}\r\n                onChange={(e) => setHarvestForm({ ...harvestForm, price: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"modal-actions\">\r\n                <button type=\"button\" onClick={() => setHarvestCrop(null)} className=\"cancel-btn\">\r\n                  Cancel\r\n                </button>\r\n                <button type=\"submit\" className=\"confirm-btn\">\r\n                  Add to Marketplace\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}