{"ast":null,"code":"var _jsxFileName = \"C:\\\\Agro-Vision\\\\frontend\\\\src\\\\pages\\\\FarmerMarketplace.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/FarmerMarketplace.jsx\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FarmerMarketplace() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [myCrops, setMyCrops] = useState([]);\n  const [marketplaceForm, setMarketplaceForm] = useState({}); // key: cropId -> { price, quantity }\n  const [directCrop, setDirectCrop] = useState({}); // For direct add form\n  const [otherCrops, setOtherCrops] = useState([]); // Other farmers' crops\n  // Fetch all crops that are already in marketplace\n  const fetchMyMarketplaceCrops = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/api/marketplace/my-crops\", {\n        credentials: \"include\"\n      });\n      const data = await res.json();\n      setMyCrops(data.filter(c => c.farmer_id === user.id));\n    } catch (err) {\n      console.error(\"Error fetching marketplace crops\", err);\n    }\n  };\n  useEffect(() => {\n    if (user) fetchMyMarketplaceCrops();\n    fetchOtherCrops();\n  }, [user]);\n  // New function to fetch other farmersâ€™ crops\n  const fetchOtherCrops = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/api/crops\", {\n        credentials: \"include\"\n      });\n      const data = await res.json();\n      setOtherCrops(data.filter(c => c.farmer_id !== user.id));\n    } catch (err) {\n      console.error(\"Error fetching other crops\", err);\n    }\n  };\n  // Handle adding crop to marketplace\n  const handleAddToMarketplace = async crop => {\n    const formData = marketplaceForm[crop.id];\n    if (!(formData !== null && formData !== void 0 && formData.price) || !(formData !== null && formData !== void 0 && formData.quantity)) return alert(\"Enter price and quantity\");\n    try {\n      const res = await fetch(`http://localhost:5000/api/marketplace/harvest/${crop.id}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          price: parseFloat(formData.price),\n          quantity: parseInt(formData.quantity)\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) return alert(data.message);\n      alert(\"Crop added to marketplace!\");\n      setMarketplaceForm({\n        ...marketplaceForm,\n        [crop.id]: {\n          price: \"\",\n          quantity: \"\"\n        }\n      });\n      fetchMyMarketplaceCrops();\n    } catch (err) {\n      console.error(err);\n      alert(\"Error adding crop to marketplace\");\n    }\n  };\n\n  // Handle direct add of crop/food to marketplace\n  const handleAddDirect = async () => {\n    if (!directCrop.name || !directC.qCantity || !directForm.unit || !directForm.price) {\n      return alert(\"Fill all required fields (name, quantity, unit, price)\");\n    }\n    try {\n      const res = await fetch(\"http://localhost:5000/api/marketplace/add-direct\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          name: directForm.name,\n          quantity: parseFloat(directForm.quantity),\n          unit: directForm.unit,\n          price: parseFloat(directForm.price),\n          crop_pic: directForm.crop_pic || \"\",\n          // optional\n          discount: directForm.discount ? parseFloat(directForm.discount) : null,\n          minQuantity: directForm.minQuantity ? parseFloat(directForm.minQuantity) : null\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) return alert(data.message);\n      alert(\"Crop added directly to marketplace!\");\n      setDirectCrop({\n        name: \"\",\n        quantity: \"\",\n        unit: \"\",\n        price: \"\",\n        crop_pic: \"\",\n        discount: \"\",\n        minQuantity: \"\"\n      });\n      fetchMyMarketplaceCrops();\n    } catch (err) {\n      console.error(err);\n      alert(\"Error adding crop directly\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: \"100vh\",\n      padding: \"32px 0\",\n      background: \"#f9fbe7\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 1200,\n        margin: \"0 auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: 32,\n          fontWeight: 700,\n          color: \"#26a69a\",\n          marginBottom: 16\n        },\n        children: \"My Marketplace Crops\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), myCrops.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No crops in marketplace yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n          gap: 24\n        },\n        children: myCrops.map(crop => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: \"#fff\",\n            borderRadius: 12,\n            padding: 20,\n            boxShadow: \"0 2px 6px #b2dfdb\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: 22,\n              fontWeight: 700,\n              color: \"#00897b\"\n            },\n            children: crop.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Quantity: \", crop.quantity, \" \", crop.unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", crop.price, \" Tk\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), crop.discount && crop.minQuantity && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"#e65100\",\n              fontWeight: 700\n            },\n            children: [crop.discount, \"% discount if buy \", crop.minQuantity, \" \", crop.unit, \" or more\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)]\n        }, crop.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: 32,\n          fontWeight: 700,\n          color: \"#26a69a\",\n          margin: \"40px 0 16px 0\"\n        },\n        children: \"Add Existing Crop/Food Directly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n          gap: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: \"#fff\",\n            borderRadius: 12,\n            padding: 20,\n            boxShadow: \"0 2px 6px #b2dfdb\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Crop/Food Name\",\n            value: directCrop.name || \"\",\n            onChange: e => setDirectCrop({\n              ...directCrop,\n              name: e.target.value\n            }),\n            style: {\n              width: \"100%\",\n              padding: 8,\n              marginBottom: 8,\n              borderRadius: 6,\n              border: \"1px solid #b2dfdb\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Quantity\",\n            value: directCrop.quantity || \"\",\n            onChange: e => setDirectCrop({\n              ...directCrop,\n              quantity: e.target.value\n            }),\n            style: {\n              width: \"48%\",\n              marginRight: \"4%\",\n              padding: 8,\n              borderRadius: 6,\n              border: \"1px solid #b2dfdb\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Unit\",\n            value: directCrop.unit || \"\",\n            onChange: e => setDirectCrop({\n              ...directCrop,\n              unit: e.target.value\n            }),\n            style: {\n              width: \"48%\",\n              padding: 8,\n              borderRadius: 6,\n              border: \"1px solid #b2dfdb\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Price\",\n            value: directCrop.price || \"\",\n            onChange: e => setDirectCrop({\n              ...directCrop,\n              price: e.target.value\n            }),\n            style: {\n              width: \"48%\",\n              marginRight: \"4%\",\n              padding: 8,\n              borderRadius: 6,\n              border: \"1px solid #b2dfdb\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddDirect,\n            style: {\n              marginTop: 10,\n              padding: \"8px 16px\",\n              borderRadius: 8,\n              background: \"#26c6da\",\n              color: \"#fff\",\n              border: \"none\",\n              fontWeight: 600,\n              cursor: \"pointer\"\n            },\n            children: \"Add Directly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: 32,\n          fontWeight: 700,\n          color: \"#26a69a\",\n          margin: \"40px 0 16px 0\"\n        },\n        children: \"Other Farmers\\u2019 Crops\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), otherCrops.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No other crops available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n          gap: 24\n        },\n        children: otherCrops.map(crop => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: \"#fff\",\n            borderRadius: 12,\n            padding: 20,\n            boxShadow: \"0 2px 6px #b2dfdb\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: 22,\n              fontWeight: 700,\n              color: \"#00897b\"\n            },\n            children: crop.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Quantity: \", crop.quantity, \" \", crop.unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Base Price: \", crop.base_price, \" Tk\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Farmer: \", crop.farmer_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"#888\",\n              fontStyle: \"italic\"\n            },\n            children: \"Read-only, cannot add to marketplace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, crop.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(FarmerMarketplace, \"xiwKYTzyDu9+WVyZiobKZOgwwVs=\");\n_c = FarmerMarketplace;\nvar _c;\n$RefreshReg$(_c, \"FarmerMarketplace\");","map":{"version":3,"names":["React","useEffect","useState","useContext","AuthContext","jsxDEV","_jsxDEV","FarmerMarketplace","_s","user","myCrops","setMyCrops","marketplaceForm","setMarketplaceForm","directCrop","setDirectCrop","otherCrops","setOtherCrops","fetchMyMarketplaceCrops","res","fetch","credentials","data","json","filter","c","farmer_id","id","err","console","error","fetchOtherCrops","handleAddToMarketplace","crop","formData","price","quantity","alert","method","headers","body","JSON","stringify","parseFloat","parseInt","ok","message","handleAddDirect","name","directC","qCantity","directForm","unit","crop_pic","discount","minQuantity","style","minHeight","padding","background","children","maxWidth","margin","fontSize","fontWeight","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","length","display","gridTemplateColumns","gap","map","borderRadius","boxShadow","type","placeholder","value","onChange","e","target","width","border","marginRight","onClick","marginTop","cursor","base_price","farmer_name","fontStyle","_c","$RefreshReg$"],"sources":["C:/Agro-Vision/frontend/src/pages/FarmerMarketplace.jsx"],"sourcesContent":["// frontend/src/pages/FarmerMarketplace.jsx\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport default function FarmerMarketplace() {\r\n  const { user } = useContext(AuthContext);\r\n  const [myCrops, setMyCrops] = useState([]);\r\n  const [marketplaceForm, setMarketplaceForm] = useState({}); // key: cropId -> { price, quantity }\r\n  const [directCrop, setDirectCrop] = useState({}); // For direct add form\r\n  const [otherCrops, setOtherCrops] = useState([]); // Other farmers' crops\r\n  // Fetch all crops that are already in marketplace\r\n  const fetchMyMarketplaceCrops = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/marketplace/my-crops\", { credentials: \"include\" });\r\n      const data = await res.json();\r\n      setMyCrops(data.filter(c => c.farmer_id === user.id));\r\n      \r\n    } catch (err) {\r\n      console.error(\"Error fetching marketplace crops\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) fetchMyMarketplaceCrops();\r\n    fetchOtherCrops();\r\n  }, [user]);\r\n// New function to fetch other farmersâ€™ crops\r\nconst fetchOtherCrops = async () => {\r\n  try {\r\n    const res = await fetch(\"http://localhost:5000/api/crops\", { credentials: \"include\" });\r\n    const data = await res.json();\r\n    setOtherCrops(data.filter(c => c.farmer_id !== user.id));\r\n  } catch (err) {\r\n    console.error(\"Error fetching other crops\", err);\r\n  }\r\n};\r\n  // Handle adding crop to marketplace\r\n  const handleAddToMarketplace = async (crop) => {\r\n    const formData = marketplaceForm[crop.id];\r\n    \r\n    if (!formData?.price || !formData?.quantity) return alert(\"Enter price and quantity\");\r\n\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/marketplace/harvest/${crop.id}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({\r\n          price: parseFloat(formData.price),\r\n          quantity: parseInt(formData.quantity)\r\n        })\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) return alert(data.message);\r\n      alert(\"Crop added to marketplace!\");\r\n      setMarketplaceForm({ ...marketplaceForm, [crop.id]: { price: \"\", quantity: \"\" } });\r\n      fetchMyMarketplaceCrops();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error adding crop to marketplace\");\r\n    }\r\n  };\r\n\r\n  // Handle direct add of crop/food to marketplace\r\n  const handleAddDirect = async () => {\r\n  if (!directCrop.name || !directC.qCantity || !directForm.unit || !directForm.price) {\r\n    return alert(\"Fill all required fields (name, quantity, unit, price)\");\r\n  }\r\n\r\n  try {\r\n    const res = await fetch(\"http://localhost:5000/api/marketplace/add-direct\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({\r\n        name: directForm.name,\r\n        quantity: parseFloat(directForm.quantity),\r\n        unit: directForm.unit,\r\n        price: parseFloat(directForm.price),\r\n        crop_pic: directForm.crop_pic || \"\", // optional\r\n        discount: directForm.discount ? parseFloat(directForm.discount) : null,\r\n        minQuantity: directForm.minQuantity ? parseFloat(directForm.minQuantity) : null\r\n      })\r\n    });\r\n\r\n    const data = await res.json();\r\n    if (!res.ok) return alert(data.message);\r\n    alert(\"Crop added directly to marketplace!\");\r\n    setDirectCrop({ name: \"\", quantity: \"\", unit: \"\", price: \"\", crop_pic: \"\", discount: \"\", minQuantity: \"\" });\r\n    fetchMyMarketplaceCrops();\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(\"Error adding crop directly\");\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div style={{ minHeight: \"100vh\", padding: \"32px 0\", background: \"#f9fbe7\" }}>\r\n      <div style={{ maxWidth: 1200, margin: \"0 auto\" }}>\r\n\r\n        {/* My Crops Section - only show crops already in marketplace */}\r\n        <h2 style={{ fontSize: 32, fontWeight: 700, color: \"#26a69a\", marginBottom: 16 }}>My Marketplace Crops</h2>\r\n        {myCrops.length === 0 && <p>No crops in marketplace yet.</p>}\r\n        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\", gap: 24 }}>\r\n          {myCrops.map(crop => (\r\n            <div key={crop.id} style={{ background: \"#fff\", borderRadius: 12, padding: 20, boxShadow: \"0 2px 6px #b2dfdb\" }}>\r\n              <h3 style={{ fontSize: 22, fontWeight: 700, color: \"#00897b\" }}>{crop.name}</h3>\r\n              <p>Quantity: {crop.quantity} {crop.unit}</p>\r\n              <p>Price: {crop.price} Tk</p>\r\n              {crop.discount && crop.minQuantity && (\r\n                <p style={{ color: \"#e65100\", fontWeight: 700 }}>\r\n                  {crop.discount}% discount if buy {crop.minQuantity} {crop.unit} or more\r\n                </p>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Direct Add New Crop Section */}\r\n        <h2 style={{ fontSize: 32, fontWeight: 700, color: \"#26a69a\", margin: \"40px 0 16px 0\" }}>Add Existing Crop/Food Directly</h2>\r\n        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\", gap: 16 }}>\r\n          <div style={{ background: \"#fff\", borderRadius: 12, padding: 20, boxShadow: \"0 2px 6px #b2dfdb\" }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Crop/Food Name\"\r\n              value={directCrop.name || \"\"}\r\n              onChange={e => setDirectCrop({ ...directCrop, name: e.target.value })}\r\n              style={{ width: \"100%\", padding: 8, marginBottom: 8, borderRadius: 6, border: \"1px solid #b2dfdb\" }}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Quantity\"\r\n              value={directCrop.quantity || \"\"}\r\n              onChange={e => setDirectCrop({ ...directCrop, quantity: e.target.value })}\r\n              style={{ width: \"48%\", marginRight: \"4%\", padding: 8, borderRadius: 6, border: \"1px solid #b2dfdb\" }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Unit\"\r\n              value={directCrop.unit || \"\"}\r\n              onChange={e => setDirectCrop({ ...directCrop, unit: e.target.value })}\r\n              style={{ width: \"48%\", padding: 8, borderRadius: 6, border: \"1px solid #b2dfdb\" }}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Price\"\r\n              value={directCrop.price || \"\"}\r\n              onChange={e => setDirectCrop({ ...directCrop, price: e.target.value })}\r\n              style={{ width: \"48%\", marginRight: \"4%\", padding: 8, borderRadius: 6, border: \"1px solid #b2dfdb\" }}\r\n            />\r\n            <button\r\n              onClick={handleAddDirect}\r\n              style={{ marginTop: 10, padding: \"8px 16px\", borderRadius: 8, background: \"#26c6da\", color: \"#fff\", border: \"none\", fontWeight: 600, cursor: \"pointer\" }}\r\n            >\r\n              Add Directly\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Other Farmersâ€™ Crops Section (unchanged) */}\r\n        <h2 style={{ fontSize: 32, fontWeight: 700, color: \"#26a69a\", margin: \"40px 0 16px 0\" }}>Other Farmersâ€™ Crops</h2>\r\n        {otherCrops.length === 0 && <p>No other crops available.</p>}\r\n        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\", gap: 24 }}>\r\n          {otherCrops.map(crop => (\r\n            <div key={crop.id} style={{ background: \"#fff\", borderRadius: 12, padding: 20, boxShadow: \"0 2px 6px #b2dfdb\" }}>\r\n              <h3 style={{ fontSize: 22, fontWeight: 700, color: \"#00897b\" }}>{crop.name}</h3>\r\n              <p>Quantity: {crop.quantity} {crop.unit}</p>\r\n              <p>Base Price: {crop.base_price} Tk</p>\r\n              <p>Farmer: {crop.farmer_name}</p>\r\n              <p style={{ color: \"#888\", fontStyle: \"italic\" }}>Read-only, cannot add to marketplace</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}