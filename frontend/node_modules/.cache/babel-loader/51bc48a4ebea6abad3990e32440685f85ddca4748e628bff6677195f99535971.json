{"ast":null,"code":"var _jsxFileName = \"C:\\\\Agro-Vision\\\\frontend\\\\src\\\\pages\\\\FarmerCropPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FarmerCropPage() {\n  _s();\n  const [crops, setCrops] = useState([]);\n  const [form, setForm] = useState({\n    crop_name: \"\",\n    land_size: \"\",\n    cultivate_date: \"\",\n    harvest_date: \"\",\n    total_cost: \"\",\n    notes: \"\"\n  });\n  const fetchCrops = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/api/farmer/crops\", {\n        credentials: \"include\"\n      });\n      const data = await res.json();\n      setCrops(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    fetchCrops();\n  }, []);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAddCrop = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/api/farmer/crops\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify(form)\n      });\n      if (res.ok) {\n        setForm({\n          crop_name: \"\",\n          land_size: \"\",\n          cultivate_date: \"\",\n          harvest_date: \"\",\n          total_cost: \"\",\n          notes: \"\"\n        });\n        fetchCrops();\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleHarvest = async cropId => {\n    try {\n      await fetch(`http://localhost:5000/api/farmer/crops/harvest/${cropId}`, {\n        method: \"POST\",\n        credentials: \"include\"\n      });\n      fetchCrops();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"My Crops\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 border rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2\",\n        children: \"Add New Crop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"crop_name\",\n        placeholder: \"Crop Name\",\n        value: form.crop_name,\n        onChange: handleChange,\n        className: \"border p-1 m-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"land_size\",\n        placeholder: \"Land Size (acres)\",\n        value: form.land_size,\n        onChange: handleChange,\n        className: \"border p-1 m-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"cultivate_date\",\n        value: form.cultivate_date,\n        onChange: handleChange,\n        className: \"border p-1 m-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"harvest_date\",\n        value: form.harvest_date,\n        onChange: handleChange,\n        className: \"border p-1 m-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"total_cost\",\n        placeholder: \"Total Cost\",\n        value: form.total_cost,\n        onChange: handleChange,\n        className: \"border p-1 m-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"notes\",\n        placeholder: \"Notes\",\n        value: form.notes,\n        onChange: handleChange,\n        className: \"border p-1 m-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCrop,\n        className: \"bg-green-500 text-white p-1 m-1 rounded\",\n        children: \"Add Crop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: crops.map(crop => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-3 mb-2 rounded shadow flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: crop.crop_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 18\n            }, this), \" (\", crop.land_size, \" acres)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Cultivate: \", crop.cultivate_date, \" | Harvest: \", crop.harvest_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Cost: \", crop.total_cost, \" Tk\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", crop.harvested ? \"Harvested\" : \"Cultivating\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), !crop.harvested && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleHarvest(crop.id),\n          className: \"bg-yellow-500 text-white p-2 rounded\",\n          children: \"Harvest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, crop.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(FarmerCropPage, \"GOLo42PTN7iDzXCRB/V8uO7GSkk=\");\n_c = FarmerCropPage;\nvar _c;\n$RefreshReg$(_c, \"FarmerCropPage\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","FarmerCropPage","_s","crops","setCrops","form","setForm","crop_name","land_size","cultivate_date","harvest_date","total_cost","notes","fetchCrops","res","fetch","credentials","data","json","err","console","error","handleChange","e","target","name","value","handleAddCrop","method","headers","body","JSON","stringify","ok","handleHarvest","cropId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","type","onClick","map","crop","harvested","id","_c","$RefreshReg$"],"sources":["C:/Agro-Vision/frontend/src/pages/FarmerCropPage.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function FarmerCropPage() {\r\n  const [crops, setCrops] = useState([]);\r\n  const [form, setForm] = useState({\r\n    crop_name: \"\",\r\n    land_size: \"\",\r\n    cultivate_date: \"\",\r\n    harvest_date: \"\",\r\n    total_cost: \"\",\r\n    notes: \"\",\r\n  });\r\n\r\n  const fetchCrops = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/farmer/crops\", { credentials: \"include\" });\r\n      const data = await res.json();\r\n      setCrops(data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCrops();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAddCrop = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/farmer/crops\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(form),\r\n      });\r\n      if (res.ok) {\r\n        setForm({ crop_name: \"\", land_size: \"\", cultivate_date: \"\", harvest_date: \"\", total_cost: \"\", notes: \"\" });\r\n        fetchCrops();\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleHarvest = async (cropId) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/api/farmer/crops/harvest/${cropId}`, {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n      });\r\n      fetchCrops();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">My Crops</h2>\r\n\r\n      {/* Add Crop Form */}\r\n      <div className=\"mb-6 p-4 border rounded shadow\">\r\n        <h3 className=\"font-semibold mb-2\">Add New Crop</h3>\r\n        <input name=\"crop_name\" placeholder=\"Crop Name\" value={form.crop_name} onChange={handleChange} className=\"border p-1 m-1\" />\r\n        <input name=\"land_size\" placeholder=\"Land Size (acres)\" value={form.land_size} onChange={handleChange} className=\"border p-1 m-1\" />\r\n        <input type=\"date\" name=\"cultivate_date\" value={form.cultivate_date} onChange={handleChange} className=\"border p-1 m-1\" />\r\n        <input type=\"date\" name=\"harvest_date\" value={form.harvest_date} onChange={handleChange} className=\"border p-1 m-1\" />\r\n        <input name=\"total_cost\" placeholder=\"Total Cost\" value={form.total_cost} onChange={handleChange} className=\"border p-1 m-1\" />\r\n        <input name=\"notes\" placeholder=\"Notes\" value={form.notes} onChange={handleChange} className=\"border p-1 m-1\" />\r\n        <button onClick={handleAddCrop} className=\"bg-green-500 text-white p-1 m-1 rounded\">Add Crop</button>\r\n      </div>\r\n\r\n      {/* Crop List */}\r\n      <div>\r\n        {crops.map((crop) => (\r\n          <div key={crop.id} className=\"border p-3 mb-2 rounded shadow flex justify-between items-center\">\r\n            <div>\r\n              <p><strong>{crop.crop_name}</strong> ({crop.land_size} acres)</p>\r\n              <p>Cultivate: {crop.cultivate_date} | Harvest: {crop.harvest_date}</p>\r\n              <p>Total Cost: {crop.total_cost} Tk</p>\r\n              <p>Status: {crop.harvested ? \"Harvested\" : \"Cultivating\"}</p>\r\n            </div>\r\n            {!crop.harvested && (\r\n              <button\r\n                onClick={() => handleHarvest(crop.id)}\r\n                className=\"bg-yellow-500 text-white p-2 rounded\"\r\n              >\r\n                Harvest\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}