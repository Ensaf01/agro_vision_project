{"ast":null,"code":"var _jsxFileName = \"C:\\\\Agro-Vision\\\\frontend\\\\src\\\\pages\\\\FarmerMarketplace.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/FarmerMarketplace.jsx\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FarmerMarketplace() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [myCrops, setMyCrops] = useState([]);\n  const [marketplaceForm, setMarketplaceForm] = useState({}); // key: cropId -> { price, quantity }\n  const [directCrop, setDirectCrop] = useState({}); // For direct add form\n  const [otherCrops, setOtherCrops] = useState([]); // Other farmers' crops\n\n  // Fetch all crops that are already in marketplace\n  const fetchMyMarketplaceCrops = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/api/marketplace/my-crops\", {\n        credentials: \"include\"\n      });\n      const data = await res.json();\n\n      // Map database columns to frontend fields\n      const mapped = data.map(c => ({\n        ...c,\n        name: c.crop_name,\n        // map crop_name → name\n        minQuantity: c.min_quantity // map min_quantity → minQuantity\n      }));\n      setMyCrops(mapped);\n    } catch (err) {\n      console.error(\"Error fetching marketplace crops\", err);\n    }\n  };\n  useEffect(() => {\n    if (user) fetchMyMarketplaceCrops();\n    fetchOtherCrops();\n  }, [user]);\n\n  // New function to fetch other farmers’ crops\n  // Fetch other farmers’ crops from marketplace\n  // Fetch other farmers’ crops\n  const fetchOtherCrops = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/api/marketplace/crops\", {\n        credentials: \"include\"\n      });\n      const data = await res.json();\n      // Exclude logged-in farmer’s own crops\n      setOtherCrops(data.filter(c => c.farmer_id !== user.id));\n    } catch (err) {\n      console.error(\"Error fetching other crops\", err);\n    }\n  };\n\n  // Handle adding crop to marketplace\n  const handleAddToMarketplace = async crop => {\n    const formData = marketplaceForm[crop.id];\n    if (!(formData !== null && formData !== void 0 && formData.price) || !(formData !== null && formData !== void 0 && formData.quantity)) return alert(\"Enter price and quantity\");\n    try {\n      const res = await fetch(`http://localhost:5000/api/marketplace/harvest/${crop.id}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          price: parseFloat(formData.price),\n          quantity: parseInt(formData.quantity)\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) return alert(data.message);\n      alert(\"Crop added to marketplace!\");\n      setMarketplaceForm({\n        ...marketplaceForm,\n        [crop.id]: {\n          price: \"\",\n          quantity: \"\"\n        }\n      });\n      fetchMyMarketplaceCrops();\n    } catch (err) {\n      console.error(err);\n      alert(\"Error adding crop to marketplace\");\n    }\n  };\n\n  // Handle direct add of crop/food to marketplace\n  const handleAddDirect = async () => {\n    if (!directCrop.name || !directCrop.quantity || !directCrop.unit || !directCrop.price) {\n      return alert(\"Fill all required fields (name, quantity, unit, price)\");\n    }\n    try {\n      const res = await fetch(\"http://localhost:5000/api/marketplace/add-direct\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          name: directCrop.name,\n          quantity: parseFloat(directCrop.quantity),\n          unit: directCrop.unit,\n          price: parseFloat(directCrop.price),\n          crop_pic: directCrop.crop_pic || \"\",\n          // optional\n          discount: directCrop.discount ? parseFloat(directCrop.discount) : null,\n          minQuantity: directCrop.minQuantity ? parseFloat(directCrop.minQuantity) : null\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) return alert(data.message);\n      alert(\"Crop added directly to marketplace!\");\n      setDirectCrop({\n        name: \"\",\n        quantity: \"\",\n        unit: \"\",\n        price: \"\",\n        crop_pic: \"\",\n        discount: \"\",\n        minQuantity: \"\"\n      });\n      fetchMyMarketplaceCrops();\n    } catch (err) {\n      console.error(err);\n      alert(\"Error adding crop directly\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: \"100vh\",\n      padding: \"32px 0\",\n      background: \"#f9fbe7\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 1200,\n        margin: \"0 auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: 32,\n          fontWeight: 700,\n          color: \"#26a69a\",\n          marginBottom: 16\n        },\n        children: \"My Marketplace Crops\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 1\n      }, this), myCrops.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No crops in marketplace yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n          gap: 24\n        },\n        children: myCrops.map(crop => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: \"#fff\",\n            borderRadius: 12,\n            padding: 20,\n            boxShadow: \"0 2px 6px #b2dfdb\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: 22,\n              fontWeight: 700,\n              color: \"#00897b\"\n            },\n            children: crop.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Quantity: \", crop.quantity, \" \", crop.unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", crop.price, \" Tk\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 7\n          }, this), crop.discount && crop.minQuantity && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"#e65100\",\n              fontWeight: 700\n            },\n            children: [crop.discount, \"% discount if buy \", crop.minQuantity, \" \", crop.unit, \" or more\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              if (!window.confirm(\"Are you sure you want to remove this crop from the marketplace?\")) return;\n              try {\n                const res = await fetch(`http://localhost:5000/api/marketplace/remove/${crop.id}`, {\n                  method: 'DELETE',\n                  credentials: 'include'\n                });\n                if (res.ok) {\n                  alert(\"Crop removed from marketplace!\");\n                  fetchMyMarketplaceCrops(); // refresh list\n                } else {\n                  const data = await res.json();\n                  alert(\"Error: \" + data.message);\n                }\n              } catch (err) {\n                console.error(err);\n                alert(\"Error removing crop from marketplace\");\n              }\n            },\n            style: {\n              marginTop: 10,\n              padding: \"8px 16px\",\n              borderRadius: 8,\n              background: \"#e53935\",\n              color: \"#fff\",\n              border: \"none\",\n              fontWeight: 600,\n              cursor: \"pointer\"\n            },\n            children: \"Delete from Marketplace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 7\n          }, this)]\n        }, crop.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: 32,\n          fontWeight: 700,\n          color: \"#26a69a\",\n          margin: \"40px 0 16px 0\"\n        },\n        children: \"Add Existing Crop/Food Directly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n          gap: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: \"#fff\",\n            borderRadius: 12,\n            padding: 20,\n            boxShadow: \"0 2px 6px #b2dfdb\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Crop/Food Name\",\n            value: directCrop.name || \"\",\n            onChange: e => setDirectCrop({\n              ...directCrop,\n              name: e.target.value\n            }),\n            style: {\n              width: \"100%\",\n              padding: 8,\n              marginBottom: 8,\n              borderRadius: 6,\n              border: \"1px solid #b2dfdb\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Quantity\",\n            value: directCrop.quantity || \"\",\n            onChange: e => setDirectCrop({\n              ...directCrop,\n              quantity: e.target.value\n            }),\n            style: {\n              width: \"48%\",\n              marginRight: \"4%\",\n              padding: 8,\n              borderRadius: 6,\n              border: \"1px solid #b2dfdb\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Unit\",\n            value: directCrop.unit || \"\",\n            onChange: e => setDirectCrop({\n              ...directCrop,\n              unit: e.target.value\n            }),\n            style: {\n              width: \"48%\",\n              padding: 8,\n              borderRadius: 6,\n              border: \"1px solid #b2dfdb\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Price\",\n            value: directCrop.price || \"\",\n            onChange: e => setDirectCrop({\n              ...directCrop,\n              price: e.target.value\n            }),\n            style: {\n              width: \"48%\",\n              marginRight: \"4%\",\n              padding: 8,\n              borderRadius: 6,\n              border: \"1px solid #b2dfdb\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddDirect,\n            style: {\n              marginTop: 10,\n              padding: \"8px 16px\",\n              borderRadius: 8,\n              background: \"#26c6da\",\n              color: \"#fff\",\n              border: \"none\",\n              fontWeight: 600,\n              cursor: \"pointer\"\n            },\n            children: \"Add Directly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: 32,\n          fontWeight: 700,\n          color: \"#26a69a\",\n          margin: \"40px 0 16px 0\"\n        },\n        children: \"Other Farmers\\u2019 Crops\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 1\n      }, this), otherCrops.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No other crops available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n          gap: 24\n        },\n        children: otherCrops.map(crop => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: \"#fff\",\n            borderRadius: 12,\n            padding: 20,\n            boxShadow: \"0 2px 6px #b2dfdb\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: 22,\n              fontWeight: 700,\n              color: \"#00897b\"\n            },\n            children: crop.crop_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Quantity: \", crop.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", crop.price, \" Tk\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 7\n          }, this), crop.highest_bid && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: 700,\n              color: \"#e65100\"\n            },\n            children: [\"Highest Bid: \", crop.highest_bid, \" Tk\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Farmer: \", crop.farmer_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 7\n          }, this)]\n        }, crop.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(FarmerMarketplace, \"xiwKYTzyDu9+WVyZiobKZOgwwVs=\");\n_c = FarmerMarketplace;\nvar _c;\n$RefreshReg$(_c, \"FarmerMarketplace\");","map":{"version":3,"names":["React","useEffect","useState","useContext","AuthContext","jsxDEV","_jsxDEV","FarmerMarketplace","_s","user","myCrops","setMyCrops","marketplaceForm","setMarketplaceForm","directCrop","setDirectCrop","otherCrops","setOtherCrops","fetchMyMarketplaceCrops","res","fetch","credentials","data","json","mapped","map","c","name","crop_name","minQuantity","min_quantity","err","console","error","fetchOtherCrops","filter","farmer_id","id","handleAddToMarketplace","crop","formData","price","quantity","alert","method","headers","body","JSON","stringify","parseFloat","parseInt","ok","message","handleAddDirect","unit","crop_pic","discount","style","minHeight","padding","background","children","maxWidth","margin","fontSize","fontWeight","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","length","display","gridTemplateColumns","gap","borderRadius","boxShadow","onClick","window","confirm","marginTop","border","cursor","type","placeholder","value","onChange","e","target","width","marginRight","highest_bid","farmer_name","_c","$RefreshReg$"],"sources":["C:/Agro-Vision/frontend/src/pages/FarmerMarketplace.jsx"],"sourcesContent":["// frontend/src/pages/FarmerMarketplace.jsx\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport default function FarmerMarketplace() {\r\n  const { user } = useContext(AuthContext);\r\n  const [myCrops, setMyCrops] = useState([]);\r\n  const [marketplaceForm, setMarketplaceForm] = useState({}); // key: cropId -> { price, quantity }\r\n  const [directCrop, setDirectCrop] = useState({}); // For direct add form\r\n  const [otherCrops, setOtherCrops] = useState([]); // Other farmers' crops\r\n\r\n  // Fetch all crops that are already in marketplace\r\nconst fetchMyMarketplaceCrops = async () => {\r\n  try {\r\n    const res = await fetch(\"http://localhost:5000/api/marketplace/my-crops\", { credentials: \"include\" });\r\n    const data = await res.json();\r\n\r\n    // Map database columns to frontend fields\r\n    const mapped = data.map(c => ({\r\n      ...c,\r\n      name: c.crop_name,      // map crop_name → name\r\n      minQuantity: c.min_quantity // map min_quantity → minQuantity\r\n    }));\r\n\r\n    setMyCrops(mapped);\r\n  } catch (err) {\r\n    console.error(\"Error fetching marketplace crops\", err);\r\n  }\r\n};\r\n\r\n\r\n  useEffect(() => {\r\n    if (user) fetchMyMarketplaceCrops();\r\n    fetchOtherCrops();\r\n  }, [user]);\r\n\r\n  // New function to fetch other farmers’ crops\r\n  // Fetch other farmers’ crops from marketplace\r\n// Fetch other farmers’ crops\r\nconst fetchOtherCrops = async () => {\r\n  try {\r\n    const res = await fetch(\"http://localhost:5000/api/marketplace/crops\", { credentials: \"include\" });\r\n    const data = await res.json();\r\n    // Exclude logged-in farmer’s own crops\r\n    setOtherCrops(data.filter(c => c.farmer_id !== user.id));\r\n  } catch (err) {\r\n    console.error(\"Error fetching other crops\", err);\r\n  }\r\n};\r\n\r\n\r\n  // Handle adding crop to marketplace\r\n  const handleAddToMarketplace = async (crop) => {\r\n    const formData = marketplaceForm[crop.id];\r\n    if (!formData?.price || !formData?.quantity) return alert(\"Enter price and quantity\");\r\n\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/marketplace/harvest/${crop.id}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({\r\n          price: parseFloat(formData.price),\r\n          quantity: parseInt(formData.quantity)\r\n        })\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) return alert(data.message);\r\n      alert(\"Crop added to marketplace!\");\r\n      setMarketplaceForm({ ...marketplaceForm, [crop.id]: { price: \"\", quantity: \"\" } });\r\n      fetchMyMarketplaceCrops();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error adding crop to marketplace\");\r\n    }\r\n  };\r\n\r\n  // Handle direct add of crop/food to marketplace\r\n  const handleAddDirect = async () => {\r\n    if (!directCrop.name || !directCrop.quantity || !directCrop.unit || !directCrop.price) {\r\n  return alert(\"Fill all required fields (name, quantity, unit, price)\");\r\n}\r\n\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/marketplace/add-direct\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({\r\n          name: directCrop.name,\r\n          quantity: parseFloat(directCrop.quantity),\r\n          unit: directCrop.unit,\r\n          price: parseFloat(directCrop.price),\r\n          crop_pic: directCrop.crop_pic || \"\", // optional\r\n          discount: directCrop.discount ? parseFloat(directCrop.discount) : null,\r\n          minQuantity: directCrop.minQuantity ? parseFloat(directCrop.minQuantity) : null\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (!res.ok) return alert(data.message);\r\n      alert(\"Crop added directly to marketplace!\");\r\n      setDirectCrop({ name: \"\", quantity: \"\", unit: \"\", price: \"\", crop_pic: \"\", discount: \"\", minQuantity: \"\" });\r\n      fetchMyMarketplaceCrops();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error adding crop directly\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ minHeight: \"100vh\", padding: \"32px 0\", background: \"#f9fbe7\" }}>\r\n      <div style={{ maxWidth: 1200, margin: \"0 auto\" }}>\r\n\r\n       {/* My Crops Section - only show crops already in marketplace */}\r\n<h2 style={{ fontSize: 32, fontWeight: 700, color: \"#26a69a\", marginBottom: 16 }}>My Marketplace Crops</h2>\r\n{myCrops.length === 0 && <p>No crops in marketplace yet.</p>}\r\n<div style={{ display: \"grid\", gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\", gap: 24 }}>\r\n  {myCrops.map(crop => (\r\n    <div key={crop.id} style={{ background: \"#fff\", borderRadius: 12, padding: 20, boxShadow: \"0 2px 6px #b2dfdb\" }}>\r\n      <h3 style={{ fontSize: 22, fontWeight: 700, color: \"#00897b\" }}>{crop.name}</h3>\r\n      <p>Quantity: {crop.quantity} {crop.unit}</p>\r\n      <p>Price: {crop.price} Tk</p>\r\n      {crop.discount && crop.minQuantity && (\r\n        <p style={{ color: \"#e65100\", fontWeight: 700 }}>\r\n          {crop.discount}% discount if buy {crop.minQuantity} {crop.unit} or more\r\n        </p>\r\n      )}\r\n\r\n      {/* Delete Button */}\r\n      <button\r\n        onClick={async () => {\r\n          if (!window.confirm(\"Are you sure you want to remove this crop from the marketplace?\")) return;\r\n          try {\r\n            const res = await fetch(`http://localhost:5000/api/marketplace/remove/${crop.id}`, {\r\n              method: 'DELETE',\r\n              credentials: 'include',\r\n            });\r\n            if (res.ok) {\r\n              alert(\"Crop removed from marketplace!\");\r\n              fetchMyMarketplaceCrops(); // refresh list\r\n            } else {\r\n              const data = await res.json();\r\n              alert(\"Error: \" + data.message);\r\n            }\r\n          } catch (err) {\r\n            console.error(err);\r\n            alert(\"Error removing crop from marketplace\");\r\n          }\r\n        }}\r\n        style={{ marginTop: 10, padding: \"8px 16px\", borderRadius: 8, background: \"#e53935\", color: \"#fff\", border: \"none\", fontWeight: 600, cursor: \"pointer\" }}\r\n      >\r\n        Delete from Marketplace\r\n      </button>\r\n    </div>\r\n  ))}\r\n</div>\r\n\r\n\r\n        {/* Direct Add New Crop Section */}\r\n        <h2 style={{ fontSize: 32, fontWeight: 700, color: \"#26a69a\", margin: \"40px 0 16px 0\" }}>Add Existing Crop/Food Directly</h2>\r\n        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\", gap: 16 }}>\r\n          <div style={{ background: \"#fff\", borderRadius: 12, padding: 20, boxShadow: \"0 2px 6px #b2dfdb\" }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Crop/Food Name\"\r\n              value={directCrop.name || \"\"}\r\n              onChange={e => setDirectCrop({ ...directCrop, name: e.target.value })}\r\n              style={{ width: \"100%\", padding: 8, marginBottom: 8, borderRadius: 6, border: \"1px solid #b2dfdb\" }}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Quantity\"\r\n              value={directCrop.quantity || \"\"}\r\n              onChange={e => setDirectCrop({ ...directCrop, quantity: e.target.value })}\r\n              style={{ width: \"48%\", marginRight: \"4%\", padding: 8, borderRadius: 6, border: \"1px solid #b2dfdb\" }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Unit\"\r\n              value={directCrop.unit || \"\"}\r\n              onChange={e => setDirectCrop({ ...directCrop, unit: e.target.value })}\r\n              style={{ width: \"48%\", padding: 8, borderRadius: 6, border: \"1px solid #b2dfdb\" }}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Price\"\r\n              value={directCrop.price || \"\"}\r\n              onChange={e => setDirectCrop({ ...directCrop, price: e.target.value })}\r\n              style={{ width: \"48%\", marginRight: \"4%\", padding: 8, borderRadius: 6, border: \"1px solid #b2dfdb\" }}\r\n            />\r\n            <button\r\n              onClick={handleAddDirect}\r\n              style={{ marginTop: 10, padding: \"8px 16px\", borderRadius: 8, background: \"#26c6da\", color: \"#fff\", border: \"none\", fontWeight: 600, cursor: \"pointer\" }}\r\n            >\r\n              Add Directly\r\n            </button>\r\n          </div>\r\n        </div>\r\n{/* Other Farmers’ Crops Section */}\r\n<h2 style={{ fontSize: 32, fontWeight: 700, color: \"#26a69a\", margin: \"40px 0 16px 0\" }}>Other Farmers’ Crops</h2>\r\n{otherCrops.length === 0 && <p>No other crops available.</p>}\r\n<div style={{ display: \"grid\", gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\", gap: 24 }}>\r\n  {otherCrops.map(crop => (\r\n    <div key={crop.id} style={{ background: \"#fff\", borderRadius: 12, padding: 20, boxShadow: \"0 2px 6px #b2dfdb\" }}>\r\n      <h3 style={{ fontSize: 22, fontWeight: 700, color: \"#00897b\" }}>{crop.crop_name}</h3>\r\n      <p>Quantity: {crop.quantity}</p>\r\n      <p>Price: {crop.price} Tk</p>\r\n      {crop.highest_bid && (\r\n        <p style={{ fontWeight: 700, color: \"#e65100\" }}>\r\n          Highest Bid: {crop.highest_bid} Tk\r\n        </p>\r\n      )}\r\n      <p>Farmer: {crop.farmer_name}</p>\r\n    </div>\r\n  ))}\r\n</div>\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}