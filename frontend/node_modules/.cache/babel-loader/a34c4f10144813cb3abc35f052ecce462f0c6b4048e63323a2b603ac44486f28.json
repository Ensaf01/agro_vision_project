{"ast":null,"code":"var _jsxFileName = \"C:\\\\Agro-Vision\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check current login status\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await fetch('/api/auth/me', {\n          credentials: 'include'\n        });\n        if (res.ok) {\n          const data = await res.json();\n          setUser(data);\n        } else {\n          setUser(null);\n        }\n      } catch {\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n  const login = async (email, password) => {\n    const res = await fetch('/api/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      credentials: 'include'\n    });\n    if (!res.ok) throw new Error((await res.json()).message || 'Login failed');\n    const data = await res.json();\n    setUser(data);\n    return data;\n  };\n  const register = async (name, email, password, role) => {\n    const res = await fetch('/api/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        role\n      }),\n      credentials: 'include'\n    });\n    if (!res.ok) throw new Error((await res.json()).message || 'Register failed');\n    const data = await res.json();\n    setUser(data);\n    return data;\n  };\n  const logout = async () => {\n    await fetch('/api/auth/logout', {\n      method: 'POST',\n      credentials: 'include'\n    });\n    setUser(null);\n  };\n  const updateProfile = async updatedData => {\n    // send PATCH request to backend\n    const res = await fetch('/api/auth/update', {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedData),\n      credentials: 'include'\n    });\n    if (!res.ok) throw new Error((await res.json()).message || 'Update failed');\n    const data = await res.json();\n    setUser(data); // update context with new user info\n    return data;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","res","fetch","credentials","ok","data","json","login","email","password","method","headers","body","JSON","stringify","Error","message","register","name","role","logout","updateProfile","updatedData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Agro-Vision/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check current login status\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await fetch('/api/auth/me', { credentials: 'include' });\r\n        if (res.ok) {\r\n          const data = await res.json();\r\n          setUser(data);\r\n        } else {\r\n          setUser(null);\r\n        }\r\n      } catch {\r\n        setUser(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    const res = await fetch('/api/auth/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password }),\r\n      credentials: 'include',\r\n    });\r\n    if (!res.ok) throw new Error((await res.json()).message || 'Login failed');\r\n    const data = await res.json();\r\n    setUser(data);\r\n    return data;\r\n  };\r\n\r\n  const register = async (name, email, password, role) => {\r\n    const res = await fetch('/api/auth/register', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ name, email, password, role }),\r\n      credentials: 'include',\r\n    });\r\n    if (!res.ok) throw new Error((await res.json()).message || 'Register failed');\r\n    const data = await res.json();\r\n    setUser(data);\r\n    return data;\r\n  };\r\n\r\n  const logout = async () => {\r\n    await fetch('/api/auth/logout', { method: 'POST', credentials: 'include' });\r\n    setUser(null);\r\n  };\r\n\r\n  const updateProfile = async (updatedData) => {\r\n    // send PATCH request to backend\r\n    const res = await fetch('/api/auth/update', {\r\n      method: 'PATCH',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(updatedData),\r\n      credentials: 'include',\r\n    });\r\n    if (!res.ok) throw new Error((await res.json()).message || 'Update failed');\r\n    const data = await res.json();\r\n    setUser(data); // update context with new user info\r\n    return data;\r\n  };\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}