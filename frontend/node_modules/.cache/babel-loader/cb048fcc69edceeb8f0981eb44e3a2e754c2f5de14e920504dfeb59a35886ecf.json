{"ast":null,"code":"var _jsxFileName = \"C:\\\\Agro-Vision\\\\frontend\\\\src\\\\pages\\\\DealerMarketplace.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport \"./DealerMarketplace.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DealerMarketplace() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [crops, setCrops] = useState([]);\n  const [bidAmounts, setBidAmounts] = useState({});\n\n  // Fetch all crops from backend\n  const fetchCrops = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/api/marketplace\", {\n        credentials: \"include\"\n      });\n      const data = await res.json();\n      setCrops(data);\n    } catch (err) {\n      console.error(\"Error fetching crops:\", err);\n    }\n  };\n\n  // Place a bid for a crop\n  const handleBid = async (cropId, basePrice, bidPrice) => {\n    const minBid = basePrice - 5;\n    const maxBid = basePrice + 5;\n    if (bidPrice < minBid || bidPrice > maxBid) {\n      alert(`Bid must be between ${minBid} and ${maxBid} Tk`);\n      return;\n    }\n    try {\n      const res = await fetch(`http://localhost:5000/api/marketplace/bid`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          crop_id: cropId,\n          bid_price: bidPrice\n        })\n      });\n      if (!res.ok) throw new Error(\"Failed to place bid\");\n      fetchCrops(); // refresh crops to show updated highest bid\n      setBidAmounts(prev => ({\n        ...prev,\n        [cropId]: \"\"\n      }));\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n  useEffect(() => {\n    fetchCrops();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dealer-marketplace\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDF3E Dealer Marketplace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crops-grid\",\n      children: [crops.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No crops available yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 32\n      }, this), crops.map(c => {\n        const minBid = c.base_price - 5;\n        const maxBid = c.base_price + 5;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crop-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: c.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Farmer: \", c.farmer_name || c.farmer_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Quantity: \", c.quantity, \" \", c.unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Base Price: \", c.base_price, \" Tk\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Highest Bid: \", c.highest_bid || \"No bids yet\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bid-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: `Bid (${minBid} - ${maxBid})`,\n              value: bidAmounts[c.id] || \"\",\n              onChange: e => setBidAmounts(prev => ({\n                ...prev,\n                [c.id]: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleBid(c.id, c.base_price, parseFloat(bidAmounts[c.id])),\n              children: \"Place Bid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, c.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(DealerMarketplace, \"gTWCLTJFqjSkgvkoIkyC6IV48XQ=\");\n_c = DealerMarketplace;\nvar _c;\n$RefreshReg$(_c, \"DealerMarketplace\");","map":{"version":3,"names":["useEffect","useState","useContext","AuthContext","jsxDEV","_jsxDEV","DealerMarketplace","_s","user","crops","setCrops","bidAmounts","setBidAmounts","fetchCrops","res","fetch","credentials","data","json","err","console","error","handleBid","cropId","basePrice","bidPrice","minBid","maxBid","alert","method","headers","body","JSON","stringify","crop_id","bid_price","ok","Error","prev","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","c","base_price","name","farmer_name","farmer_id","quantity","unit","highest_bid","type","placeholder","value","id","onChange","e","target","onClick","parseFloat","_c","$RefreshReg$"],"sources":["C:/Agro-Vision/frontend/src/pages/DealerMarketplace.jsx"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport \"./DealerMarketplace.css\";\r\n\r\nexport default function DealerMarketplace() {\r\n  const { user } = useContext(AuthContext);\r\n  const [crops, setCrops] = useState([]);\r\n  const [bidAmounts, setBidAmounts] = useState({});\r\n\r\n  // Fetch all crops from backend\r\n  const fetchCrops = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/marketplace\", { credentials: \"include\" });\r\n      const data = await res.json();\r\n      setCrops(data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching crops:\", err);\r\n    }\r\n  };\r\n\r\n  // Place a bid for a crop\r\n  const handleBid = async (cropId, basePrice, bidPrice) => {\r\n    const minBid = basePrice - 5;\r\n    const maxBid = basePrice + 5;\r\n\r\n    if (bidPrice < minBid || bidPrice > maxBid) {\r\n      alert(`Bid must be between ${minBid} and ${maxBid} Tk`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/marketplace/bid`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({ crop_id: cropId, bid_price: bidPrice }),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to place bid\");\r\n      fetchCrops(); // refresh crops to show updated highest bid\r\n      setBidAmounts(prev => ({ ...prev, [cropId]: \"\" }));\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => { fetchCrops(); }, []);\r\n\r\n  return (\r\n    <div className=\"dealer-marketplace\">\r\n      <h2>ðŸŒ¾ Dealer Marketplace</h2>\r\n\r\n      <div className=\"crops-grid\">\r\n        {crops.length === 0 && <p>No crops available yet.</p>}\r\n        {crops.map(c => {\r\n          const minBid = c.base_price - 5;\r\n          const maxBid = c.base_price + 5;\r\n          return (\r\n            <div key={c.id} className=\"crop-card\">\r\n              <h4>{c.name}</h4>\r\n              <p>Farmer: {c.farmer_name || c.farmer_id}</p>\r\n              <p>Quantity: {c.quantity} {c.unit}</p>\r\n              <p>Base Price: {c.base_price} Tk</p>\r\n              <p>Highest Bid: {c.highest_bid || \"No bids yet\"}</p>\r\n\r\n              <div className=\"bid-section\">\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder={`Bid (${minBid} - ${maxBid})`}\r\n                  value={bidAmounts[c.id] || \"\"}\r\n                  onChange={e => setBidAmounts(prev => ({ ...prev, [c.id]: e.target.value }))}\r\n                />\r\n                <button onClick={() => handleBid(c.id, c.base_price, parseFloat(bidAmounts[c.id]))}>\r\n                  Place Bid\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}