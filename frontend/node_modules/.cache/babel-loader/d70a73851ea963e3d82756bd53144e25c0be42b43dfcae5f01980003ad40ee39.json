{"ast":null,"code":"var _jsxFileName = \"C:\\\\Agro-Vision\\\\frontend\\\\src\\\\pages\\\\FarmerCropPage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport jsPDF from \"jspdf\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FarmerCropPage() {\n  _s();\n  var _weather$sys, _weather$main, _weather$weather, _weather$weather$, _weather$main2, _weather$wind, _weather$clouds, _weather$main3;\n  // Weather search state\n  const [searchArea, setSearchArea] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  const [weatherLoading, setWeatherLoading] = useState(false);\n  const [weatherError, setWeatherError] = useState(\"\");\n\n  // Weather API key (replace with your own OpenWeatherMap API key)\n  const WEATHER_API_KEY = \"93869cd59972015bacc2b11a2c2b74c7\";\n  const handleWeatherSearch = async e => {\n    e.preventDefault();\n    setWeather(null);\n    setWeatherError(\"\");\n    setWeatherLoading(true);\n    try {\n      const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(searchArea)},bd&appid=${WEATHER_API_KEY}&units=metric`);\n      if (!res.ok) {\n        setWeatherError(\"Area not found or API error.\");\n        setWeatherLoading(false);\n        return;\n      }\n      const data = await res.json();\n      setWeather(data);\n    } catch (err) {\n      setWeatherError(\"Failed to fetch weather data.\");\n    } finally {\n      setWeatherLoading(false);\n    }\n  };\n  const {\n    user\n  } = useContext(AuthContext);\n  const [crops, setCrops] = useState([]);\n  const [requestsMap, setRequestsMap] = useState({}); // cropId -> requests\n  const [selectedRequests, setSelectedRequests] = useState({}); // cropId -> dropdown open\n  const [dealPopup, setDealPopup] = useState(null); // {request, crop}\n  const [loading, setLoading] = useState(true);\n  const [form, setForm] = useState({\n    name: \"\",\n    land_size: \"\",\n    cultivate_date: \"\",\n    harvest_date: \"\",\n    total_cost: \"\",\n    crop_pic: \"\"\n  });\n  const [picPreview, setPicPreview] = useState(\"\");\n  const [formError, setFormError] = useState(\"\");\n  const [successMsg, setSuccessMsg] = useState(\"\");\n\n  // harvest modal state\n  const [harvestCrop, setHarvestCrop] = useState(null);\n  const [harvestForm, setHarvestForm] = useState({\n    quantity: \"\",\n    price: \"\"\n  });\n  const [harvestError, setHarvestError] = useState(\"\");\n  const [harvestSuccess, setHarvestSuccess] = useState(\"\");\n  const fetchCrops = React.useCallback(async () => {\n    if (!user) return;\n    try {\n      const res = await fetch(`http://localhost:5000/api/crops/farmer/${user.id}`, {\n        credentials: \"include\"\n      });\n      const data = await res.json();\n      setCrops(data);\n      // Fetch requests for each crop\n      for (const crop of data) {\n        const reqRes = await fetch(`http://localhost:5000/api/marketplace/${crop.id}/requests`, {\n          credentials: \"include\"\n        });\n        if (reqRes.ok) {\n          const reqData = await reqRes.json();\n          setRequestsMap(prev => ({\n            ...prev,\n            [crop.id]: reqData\n          }));\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [user]);\n  useEffect(() => {\n    fetchCrops();\n  }, [user, fetchCrops]);\n  const handleChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value\n  });\n  const handlePicChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setForm(f => ({\n          ...f,\n          crop_pic: reader.result\n        }));\n        setPicPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleAddCrop = async e => {\n    e.preventDefault();\n    setFormError(\"\");\n    setSuccessMsg(\"\");\n    if (!user) {\n      setFormError(\"User not logged in\");\n      return;\n    }\n    // Validation\n    if (!form.name || !form.land_size || !form.cultivate_date || !form.harvest_date || !form.total_cost) {\n      setFormError(\"All fields are required.\");\n      return;\n    }\n    if (isNaN(form.land_size) || Number(form.land_size) <= 0) {\n      setFormError(\"Land size must be a positive number.\");\n      return;\n    }\n    if (isNaN(form.total_cost) || Number(form.total_cost) < 0) {\n      setFormError(\"Total cost must be a non-negative number.\");\n      return;\n    }\n    try {\n      const res = await fetch(`http://localhost:5000/api/crops`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          ...form,\n          farmer_id: user.id\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data.message || \"Failed to add crop\");\n      setForm({\n        name: \"\",\n        land_size: \"\",\n        cultivate_date: \"\",\n        harvest_date: \"\",\n        total_cost: \"\",\n        crop_pic: \"\"\n      });\n      setPicPreview(\"\");\n      setSuccessMsg(\"Crop added successfully!\");\n      fetchCrops();\n    } catch (err) {\n      setFormError(\"Error adding crop: \" + err.message);\n    }\n  };\n  const handleDeleteCrop = async cropId => {\n    if (!window.confirm(\"Are you sure you want to delete this crop? This action cannot be undone.\")) return;\n    try {\n      // Try /api/crops/:cropId first\n      let res = await fetch(`http://localhost:5000/api/crops/${cropId}`, {\n        method: \"DELETE\",\n        credentials: \"include\"\n      });\n      // If 404, try /api/crops/delete/:cropId\n      if (res.status === 404) {\n        res = await fetch(`http://localhost:5000/api/crops/delete/${cropId}`, {\n          method: \"DELETE\",\n          credentials: \"include\"\n        });\n      }\n      if (!res.ok) {\n        const data = await res.json();\n        alert(\"Error deleting crop: \" + (data.message || \"Unknown error\"));\n        return;\n      }\n      fetchCrops();\n      alert(\"Crop deleted!\");\n    } catch (err) {\n      alert(\"Error deleting crop: \" + err.message);\n    }\n  };\n  const handleUpdateCrop = async (cropId, updatedFields) => {\n    if (!updatedFields.total_cost || isNaN(updatedFields.total_cost) || Number(updatedFields.total_cost) < 0) {\n      alert(\"Total cost must be a non-negative number.\");\n      return;\n    }\n    if (!window.confirm(\"Are you sure you want to update the cost?\")) return;\n    try {\n      const res = await fetch(`http://localhost:5000/api/crops/${cropId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify(updatedFields)\n      });\n      if (!res.ok) {\n        const data = await res.json();\n        alert(\"Error updating crop: \" + (data.message || \"Unknown error\"));\n        return;\n      }\n      fetchCrops();\n      alert(\"Crop cost updated!\");\n    } catch (err) {\n      alert(\"Error updating crop: \" + err.message);\n    }\n  };\n  const handleHarvestSubmit = async e => {\n    e.preventDefault();\n    setHarvestError(\"\");\n    setHarvestSuccess(\"\");\n    if (!harvestCrop) return;\n    // Validation\n    if (!harvestForm.quantity || isNaN(harvestForm.quantity) || Number(harvestForm.quantity) <= 0) {\n      setHarvestError(\"Quantity must be a positive number.\");\n      return;\n    }\n    if (!harvestForm.price || isNaN(harvestForm.price) || Number(harvestForm.price) < 0) {\n      setHarvestError(\"Price must be a non-negative number.\");\n      return;\n    }\n    try {\n      const res = await fetch(`http://localhost:5000/api/marketplace/harvest/${harvestCrop.id}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          price: harvestForm.price,\n          quantity: harvestForm.quantity\n        })\n      });\n      if (!res.ok) {\n        const data = await res.json();\n        setHarvestError(\"Error adding to marketplace: \" + (data.message || \"Unknown error\"));\n        return;\n      }\n      setHarvestSuccess(\"Crop added to marketplace!\");\n      setHarvestForm({\n        quantity: \"\",\n        price: \"\"\n      });\n      fetchCrops();\n      // Auto-close modal after short delay\n      setTimeout(() => {\n        setHarvestCrop(null);\n        setHarvestSuccess(\"\");\n      }, 1200);\n    } catch (err) {\n      setHarvestError(\"Error adding to marketplace: \" + err.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading crops...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"farmer-crop-bg\",\n    style: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #e0f7fa 0%, #f9fbe7 100%)',\n      padding: '32px 0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 500,\n        margin: '0 auto',\n        background: '#fff',\n        borderRadius: 12,\n        boxShadow: '0 2px 8px #b2dfdb',\n        padding: 24,\n        position: 'sticky',\n        top: 0,\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleWeatherSearch,\n        style: {\n          display: 'flex',\n          gap: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search area/city for weather...\",\n          value: searchArea,\n          onChange: e => setSearchArea(e.target.value),\n          style: {\n            flex: 1,\n            padding: '10px 14px',\n            borderRadius: 8,\n            border: '1px solid #b2dfdb',\n            fontSize: 16\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            background: '#26c6da',\n            color: '#fff',\n            border: 'none',\n            borderRadius: 8,\n            padding: '10px 24px',\n            fontWeight: 'bold',\n            fontSize: 16,\n            cursor: 'pointer'\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), weatherLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12\n        },\n        children: \"Loading weather...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 28\n      }, this), weatherError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12,\n          color: 'red'\n        },\n        children: [weatherError, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 13,\n            color: '#888'\n          },\n          children: \"Please enter a valid Bangladesh city or district name (e.g., Dhaka, Chittagong, Rajshahi).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 18,\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: 8\n          },\n          children: [\"Weather in \", weather.name, \", \", (_weather$sys = weather.sys) === null || _weather$sys === void 0 ? void 0 : _weather$sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Temperature:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 16\n          }, this), \" \", (_weather$main = weather.main) === null || _weather$main === void 0 ? void 0 : _weather$main.temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Condition:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 16\n          }, this), \" \", (_weather$weather = weather.weather) === null || _weather$weather === void 0 ? void 0 : (_weather$weather$ = _weather$weather[0]) === null || _weather$weather$ === void 0 ? void 0 : _weather$weather$.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Humidity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 16\n          }, this), \" \", (_weather$main2 = weather.main) === null || _weather$main2 === void 0 ? void 0 : _weather$main2.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Wind:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 16\n          }, this), \" \", (_weather$wind = weather.wind) === null || _weather$wind === void 0 ? void 0 : _weather$wind.speed, \" m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Clouds:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 16\n          }, this), \" \", (_weather$clouds = weather.clouds) === null || _weather$clouds === void 0 ? void 0 : _weather$clouds.all, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Pressure:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 16\n          }, this), \" \", (_weather$main3 = weather.main) === null || _weather$main3 === void 0 ? void 0 : _weather$main3.pressure, \" hPa\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddCrop,\n      className: \"mb-6 p-4 border rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-bold mb-2\",\n        children: \"Add New Crop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), formError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-box\",\n        children: formError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 23\n      }, this), successMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toast-success\",\n        children: successMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        placeholder: \"Crop Name\",\n        value: form.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handlePicChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 3\n      }, this), picPreview && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: picPreview,\n        alt: \"Preview\",\n        style: {\n          maxWidth: 100,\n          marginBottom: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"land_size\",\n        placeholder: \"Land Size (acre)\",\n        value: form.land_size,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"cultivate_date\",\n        type: \"date\",\n        value: form.cultivate_date,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"harvest_date\",\n        type: \"date\",\n        value: form.harvest_date,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"total_cost\",\n        type: \"number\",\n        placeholder: \"Total Cost\",\n        value: form.total_cost,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-2 bg-green-500 text-white px-3 py-1 rounded\",\n        children: \"Add Crop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-bold mb-2\",\n      children: \"My Crops\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), crops.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No crops added yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-4\",\n      children: [crops.map(crop => {\n        // Calculate growth percentage\n        let percent = 0;\n        if (crop.cultivate_date && crop.harvest_date) {\n          const start = new Date(crop.cultivate_date);\n          const end = new Date(crop.harvest_date);\n          const now = new Date();\n          if (end > start) {\n            const totalDays = (end - start) / (1000 * 60 * 60 * 24);\n            const elapsedDays = (now - start) / (1000 * 60 * 60 * 24);\n            percent = Math.min(100, Math.max(0, (elapsedDays / totalDays * 100).toFixed(2)));\n          }\n        }\n        const canHarvest = percent >= 80;\n        const requests = requestsMap[crop.id] || [];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 border rounded\",\n          style: {\n            position: 'relative',\n            minHeight: 220\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: 10,\n              left: 10,\n              background: '#26c6da',\n              color: '#fff',\n              borderRadius: '50%',\n              width: 32,\n              height: 32,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontWeight: 700,\n              fontSize: 18\n            },\n            children: requests.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), crop.crop_pic && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: crop.crop_pic,\n            alt: \"Crop\",\n            style: {\n              maxWidth: 100,\n              marginBottom: 8,\n              borderRadius: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: crop.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Land: \", crop.land_size, \" acre\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Cultivate: \", crop.cultivate_date, \" | Harvest: \", crop.harvest_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Cost: \", crop.total_cost, \" Tk\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"highlight\",\n              children: [percent, \"% grown\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 28\n            }, this), \" \", percent < 80 && \"(Cannot harvest before 80%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this), requests.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: '10px 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                background: '#26a69a',\n                color: '#fff',\n                borderRadius: 6,\n                padding: '6px 14px',\n                fontWeight: 600\n              },\n              onClick: () => setSelectedRequests(s => ({\n                ...s,\n                [crop.id]: !s[crop.id]\n              })),\n              children: \"Dealer Requests \\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 21\n            }, this), selectedRequests[crop.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: '#f0f0f0',\n                borderRadius: 8,\n                marginTop: 8,\n                padding: 8\n              },\n              children: requests.map(req => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: 8,\n                  borderBottom: '1px solid #ddd',\n                  paddingBottom: 6\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Dealer:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 34\n                  }, this), \" \", req.dealer_name || req.dealer_id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Price:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 34\n                  }, this), \" \", req.bid_price, \" Tk\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Quantity:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 34\n                  }, this), \" \", req.requested_quantity, \" \", req.unit]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Phone:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 34\n                  }, this), \" \", req.dealer_phone]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Address:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 34\n                  }, this), \" \", req.dealer_address]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    background: '#43a047',\n                    color: '#fff',\n                    borderRadius: 6,\n                    padding: '4px 10px',\n                    marginTop: 6\n                  },\n                  onClick: () => setDealPopup({\n                    request: req,\n                    crop\n                  }),\n                  children: \"Accept\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 29\n                }, this)]\n              }, req.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const newCost = prompt(\"Update total cost:\", crop.total_cost);\n              if (newCost !== null && newCost !== \"\") handleUpdateCrop(crop.id, {\n                total_cost: newCost\n              });\n            },\n            className: \"mr-2 bg-yellow-500 text-white px-2 py-1 rounded\",\n            children: \"Update Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteCrop(crop.id),\n            className: \"mr-2 bg-red-500 text-white px-2 py-1 rounded\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setHarvestCrop(crop),\n            className: \"bg-blue-500 text-white px-2 py-1 rounded\",\n            disabled: !canHarvest,\n            title: !canHarvest ? \"You can only harvest when crop is at least 80% grown.\" : \"Harvest\",\n            children: \"Harvest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 17\n          }, this)]\n        }, crop.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 15\n        }, this);\n      }), dealPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83C\\uDF89 Congratulations! Deal Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Dealer \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: dealPopup.request.dealer_name || dealPopup.request.dealer_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }, this), \" will buy \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [dealPopup.request.requested_quantity, \" \", dealPopup.request.unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 106\n          }, this), \" of \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: dealPopup.crop.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 190\n          }, this), \" at \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [dealPopup.request.bid_price, \" Tk\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 232\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            // Generate PDF\n            const doc = new jsPDF();\n            doc.setFontSize(18);\n            doc.text('AgroVision Deal Confirmation', 20, 20);\n            doc.setFontSize(12);\n            doc.text(`Date: ${new Date().toLocaleDateString()}`, 20, 30);\n            doc.text(`Farmer: ${user.name} (ID: ${user.id})`, 20, 40);\n            doc.text(`Dealer: ${dealPopup.request.dealer_name || dealPopup.request.dealer_id}`, 20, 50);\n            doc.text(`Dealer Phone: ${dealPopup.request.dealer_phone}`, 20, 60);\n            doc.text(`Dealer Address: ${dealPopup.request.dealer_address}`, 20, 70);\n            doc.text(`Crop: ${dealPopup.crop.name}`, 20, 80);\n            doc.text(`Quantity: ${dealPopup.request.requested_quantity} ${dealPopup.request.unit}`, 20, 90);\n            doc.text(`Price: ${dealPopup.request.bid_price} Tk`, 20, 100);\n            doc.text(`Land Size: ${dealPopup.crop.land_size} acre`, 20, 110);\n            doc.text(`Cultivate Date: ${dealPopup.crop.cultivate_date}`, 20, 120);\n            doc.text(`Harvest Date: ${dealPopup.crop.harvest_date}`, 20, 130);\n            doc.text(`Total Cost: ${dealPopup.crop.total_cost} Tk`, 20, 140);\n            doc.save(`deal_request_${dealPopup.request.id}_${Date.now()}.pdf`);\n            setDealPopup(null);\n          },\n          children: \"Download PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: 10\n          },\n          onClick: () => setDealPopup(null),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), harvestCrop && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => setHarvestCrop(null),\n          style: {\n            float: 'right'\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Harvest \", harvestCrop.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this), harvestError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-box\",\n          children: harvestError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 30\n        }, this), harvestSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toast-success\",\n          children: harvestSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleHarvestSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Quantity\",\n            value: harvestForm.quantity,\n            onChange: e => setHarvestForm({\n              ...harvestForm,\n              quantity: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Price per unit/kg\",\n            value: harvestForm.price,\n            onChange: e => setHarvestForm({\n              ...harvestForm,\n              price: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setHarvestCrop(null),\n              className: \"cancel-btn\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"confirm-btn\",\n              children: \"Add to Marketplace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n}\n_s(FarmerCropPage, \"B49lGjClbMoN4jPdsadbPxh80w0=\");\n_c = FarmerCropPage;\nvar _c;\n$RefreshReg$(_c, \"FarmerCropPage\");","map":{"version":3,"names":["useEffect","useState","useContext","jsPDF","AuthContext","jsxDEV","_jsxDEV","FarmerCropPage","_s","_weather$sys","_weather$main","_weather$weather","_weather$weather$","_weather$main2","_weather$wind","_weather$clouds","_weather$main3","searchArea","setSearchArea","weather","setWeather","weatherLoading","setWeatherLoading","weatherError","setWeatherError","WEATHER_API_KEY","handleWeatherSearch","e","preventDefault","res","fetch","encodeURIComponent","ok","data","json","err","user","crops","setCrops","requestsMap","setRequestsMap","selectedRequests","setSelectedRequests","dealPopup","setDealPopup","loading","setLoading","form","setForm","name","land_size","cultivate_date","harvest_date","total_cost","crop_pic","picPreview","setPicPreview","formError","setFormError","successMsg","setSuccessMsg","harvestCrop","setHarvestCrop","harvestForm","setHarvestForm","quantity","price","harvestError","setHarvestError","harvestSuccess","setHarvestSuccess","fetchCrops","React","useCallback","id","credentials","crop","reqRes","reqData","prev","console","error","handleChange","target","value","handlePicChange","file","files","reader","FileReader","onloadend","f","result","readAsDataURL","handleAddCrop","isNaN","Number","method","headers","body","JSON","stringify","farmer_id","Error","message","handleDeleteCrop","cropId","window","confirm","status","alert","handleUpdateCrop","updatedFields","handleHarvestSubmit","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","minHeight","background","padding","maxWidth","margin","borderRadius","boxShadow","position","top","zIndex","onSubmit","display","gap","type","placeholder","onChange","flex","border","fontSize","required","color","fontWeight","cursor","marginTop","textAlign","marginBottom","sys","country","main","temp","description","humidity","wind","speed","clouds","all","pressure","accept","src","alt","length","map","percent","start","Date","end","now","totalDays","elapsedDays","Math","min","max","toFixed","canHarvest","requests","left","width","height","alignItems","justifyContent","onClick","s","req","borderBottom","paddingBottom","dealer_name","dealer_id","bid_price","requested_quantity","unit","dealer_phone","dealer_address","request","newCost","prompt","disabled","title","doc","setFontSize","text","toLocaleDateString","save","marginLeft","float","_c","$RefreshReg$"],"sources":["C:/Agro-Vision/frontend/src/pages/FarmerCropPage.jsx"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport jsPDF from \"jspdf\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport default function FarmerCropPage() {\r\n  // Weather search state\r\n  const [searchArea, setSearchArea] = useState(\"\");\r\n  const [weather, setWeather] = useState(null);\r\n  const [weatherLoading, setWeatherLoading] = useState(false);\r\n  const [weatherError, setWeatherError] = useState(\"\");\r\n\r\n  // Weather API key (replace with your own OpenWeatherMap API key)\r\n  const WEATHER_API_KEY = \"93869cd59972015bacc2b11a2c2b74c7\";\r\n\r\n  const handleWeatherSearch = async (e) => {\r\n    e.preventDefault();\r\n    setWeather(null);\r\n    setWeatherError(\"\");\r\n    setWeatherLoading(true);\r\n    try {\r\n      const res = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(searchArea)},bd&appid=${WEATHER_API_KEY}&units=metric`\r\n      );\r\n      if (!res.ok) {\r\n        setWeatherError(\"Area not found or API error.\");\r\n        setWeatherLoading(false);\r\n        return;\r\n      }\r\n      const data = await res.json();\r\n      setWeather(data);\r\n    } catch (err) {\r\n      setWeatherError(\"Failed to fetch weather data.\");\r\n    } finally {\r\n      setWeatherLoading(false);\r\n    }\r\n  };\r\n  const { user } = useContext(AuthContext);\r\n  const [crops, setCrops] = useState([]);\r\n  const [requestsMap, setRequestsMap] = useState({}); // cropId -> requests\r\n  const [selectedRequests, setSelectedRequests] = useState({}); // cropId -> dropdown open\r\n  const [dealPopup, setDealPopup] = useState(null); // {request, crop}\r\n  const [loading, setLoading] = useState(true);\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    land_size: \"\",\r\n    cultivate_date: \"\",\r\n    harvest_date: \"\",\r\n    total_cost: \"\",\r\n    crop_pic: \"\"\r\n  });\r\n  const [picPreview, setPicPreview] = useState(\"\");\r\n  const [formError, setFormError] = useState(\"\");\r\n  const [successMsg, setSuccessMsg] = useState(\"\");\r\n\r\n  // harvest modal state\r\n  const [harvestCrop, setHarvestCrop] = useState(null);\r\n  const [harvestForm, setHarvestForm] = useState({\r\n    quantity: \"\",\r\n    price: \"\",\r\n  });\r\n  const [harvestError, setHarvestError] = useState(\"\");\r\n  const [harvestSuccess, setHarvestSuccess] = useState(\"\");\r\n\r\n  const fetchCrops = React.useCallback(async () => {\r\n    if (!user) return;\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/crops/farmer/${user.id}`, {\r\n        credentials: \"include\",\r\n      });\r\n      const data = await res.json();\r\n      setCrops(data);\r\n      // Fetch requests for each crop\r\n      for (const crop of data) {\r\n        const reqRes = await fetch(`http://localhost:5000/api/marketplace/${crop.id}/requests`, { credentials: \"include\" });\r\n        if (reqRes.ok) {\r\n          const reqData = await reqRes.json();\r\n          setRequestsMap(prev => ({ ...prev, [crop.id]: reqData }));\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    fetchCrops();\r\n  }, [user, fetchCrops]);\r\n\r\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  const handlePicChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setForm(f => ({ ...f, crop_pic: reader.result }));\r\n        setPicPreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleAddCrop = async (e) => {\r\n    e.preventDefault();\r\n    setFormError(\"\");\r\n    setSuccessMsg(\"\");\r\n    if (!user) {\r\n      setFormError(\"User not logged in\");\r\n      return;\r\n    }\r\n    // Validation\r\n    if (!form.name || !form.land_size || !form.cultivate_date || !form.harvest_date || !form.total_cost) {\r\n      setFormError(\"All fields are required.\");\r\n      return;\r\n    }\r\n    if (isNaN(form.land_size) || Number(form.land_size) <= 0) {\r\n      setFormError(\"Land size must be a positive number.\");\r\n      return;\r\n    }\r\n    if (isNaN(form.total_cost) || Number(form.total_cost) < 0) {\r\n      setFormError(\"Total cost must be a non-negative number.\");\r\n      return;\r\n    }\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/crops`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({ ...form, farmer_id: user.id }),\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.message || \"Failed to add crop\");\r\n      setForm({\r\n        name: \"\",\r\n        land_size: \"\",\r\n        cultivate_date: \"\",\r\n        harvest_date: \"\",\r\n        total_cost: \"\",\r\n        crop_pic: \"\"\r\n      });\r\n      setPicPreview(\"\");\r\n      setSuccessMsg(\"Crop added successfully!\");\r\n      fetchCrops();\r\n    } catch (err) {\r\n      setFormError(\"Error adding crop: \" + err.message);\r\n    }\r\n  };\r\n  const handleDeleteCrop = async (cropId) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this crop? This action cannot be undone.\")) return;\r\n    try {\r\n      // Try /api/crops/:cropId first\r\n      let res = await fetch(`http://localhost:5000/api/crops/${cropId}`, {\r\n        method: \"DELETE\",\r\n        credentials: \"include\"\r\n      });\r\n      // If 404, try /api/crops/delete/:cropId\r\n      if (res.status === 404) {\r\n        res = await fetch(`http://localhost:5000/api/crops/delete/${cropId}`, {\r\n          method: \"DELETE\",\r\n          credentials: \"include\"\r\n        });\r\n      }\r\n      if (!res.ok) {\r\n        const data = await res.json();\r\n        alert(\"Error deleting crop: \" + (data.message || \"Unknown error\"));\r\n        return;\r\n      }\r\n      fetchCrops();\r\n      alert(\"Crop deleted!\");\r\n    } catch (err) {\r\n      alert(\"Error deleting crop: \" + err.message);\r\n    }\r\n  };\r\n\r\n  const handleUpdateCrop = async (cropId, updatedFields) => {\r\n    if (!updatedFields.total_cost || isNaN(updatedFields.total_cost) || Number(updatedFields.total_cost) < 0) {\r\n      alert(\"Total cost must be a non-negative number.\");\r\n      return;\r\n    }\r\n    if (!window.confirm(\"Are you sure you want to update the cost?\")) return;\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/crops/${cropId}`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(updatedFields),\r\n      });\r\n      if (!res.ok) {\r\n        const data = await res.json();\r\n        alert(\"Error updating crop: \" + (data.message || \"Unknown error\"));\r\n        return;\r\n      }\r\n      fetchCrops();\r\n      alert(\"Crop cost updated!\");\r\n    } catch (err) {\r\n      alert(\"Error updating crop: \" + err.message);\r\n    }\r\n  };\r\n\r\n  const handleHarvestSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setHarvestError(\"\");\r\n    setHarvestSuccess(\"\");\r\n    if (!harvestCrop) return;\r\n    // Validation\r\n    if (!harvestForm.quantity || isNaN(harvestForm.quantity) || Number(harvestForm.quantity) <= 0) {\r\n      setHarvestError(\"Quantity must be a positive number.\");\r\n      return;\r\n    }\r\n    if (!harvestForm.price || isNaN(harvestForm.price) || Number(harvestForm.price) < 0) {\r\n      setHarvestError(\"Price must be a non-negative number.\");\r\n      return;\r\n    }\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/marketplace/harvest/${harvestCrop.id}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({\r\n          price: harvestForm.price,\r\n          quantity: harvestForm.quantity\r\n        }),\r\n      });\r\n      if (!res.ok) {\r\n        const data = await res.json();\r\n        setHarvestError(\"Error adding to marketplace: \" + (data.message || \"Unknown error\"));\r\n        return;\r\n      }\r\n      setHarvestSuccess(\"Crop added to marketplace!\");\r\n      setHarvestForm({ quantity: \"\", price: \"\" });\r\n      fetchCrops();\r\n      // Auto-close modal after short delay\r\n      setTimeout(() => {\r\n        setHarvestCrop(null);\r\n        setHarvestSuccess(\"\");\r\n      }, 1200);\r\n    } catch (err) {\r\n      setHarvestError(\"Error adding to marketplace: \" + err.message);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading crops...</p>;\r\n\r\n  return (\r\n    <div className=\"farmer-crop-bg\" style={{\r\n      minHeight: '100vh',\r\n      background: 'linear-gradient(135deg, #e0f7fa 0%, #f9fbe7 100%)',\r\n      padding: '32px 0'\r\n    }}>\r\n      {/* Area Weather Search Bar */}\r\n      <div style={{\r\n        maxWidth: 500,\r\n        margin: '0 auto',\r\n        background: '#fff',\r\n        borderRadius: 12,\r\n        boxShadow: '0 2px 8px #b2dfdb',\r\n        padding: 24,\r\n        position: 'sticky',\r\n        top: 0,\r\n        zIndex: 10\r\n      }}>\r\n        <form onSubmit={handleWeatherSearch} style={{ display: 'flex', gap: 12 }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search area/city for weather...\"\r\n            value={searchArea}\r\n            onChange={e => setSearchArea(e.target.value)}\r\n            style={{ flex: 1, padding: '10px 14px', borderRadius: 8, border: '1px solid #b2dfdb', fontSize: 16 }}\r\n            required\r\n          />\r\n          <button type=\"submit\" style={{ background: '#26c6da', color: '#fff', border: 'none', borderRadius: 8, padding: '10px 24px', fontWeight: 'bold', fontSize: 16, cursor: 'pointer' }}>\r\n            Search\r\n          </button>\r\n        </form>\r\n        {weatherLoading && <div style={{ marginTop: 12 }}>Loading weather...</div>}\r\n        {weatherError && (\r\n          <div style={{ marginTop: 12, color: 'red' }}>\r\n            {weatherError}\r\n            <br />\r\n            <span style={{ fontSize: 13, color: '#888' }}>\r\n              Please enter a valid Bangladesh city or district name (e.g., Dhaka, Chittagong, Rajshahi).\r\n            </span>\r\n          </div>\r\n        )}\r\n        {weather && (\r\n          <div style={{ marginTop: 18, textAlign: 'left' }}>\r\n            <h3 style={{ marginBottom: 8 }}>Weather in {weather.name}, {weather.sys?.country}</h3>\r\n            <p><strong>Temperature:</strong> {weather.main?.temp}°C</p>\r\n            <p><strong>Condition:</strong> {weather.weather?.[0]?.description}</p>\r\n            <p><strong>Humidity:</strong> {weather.main?.humidity}%</p>\r\n            <p><strong>Wind:</strong> {weather.wind?.speed} m/s</p>\r\n            <p><strong>Clouds:</strong> {weather.clouds?.all}%</p>\r\n            <p><strong>Pressure:</strong> {weather.main?.pressure} hPa</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {/* Add Crop Form */}\r\n      <form onSubmit={handleAddCrop} className=\"mb-6 p-4 border rounded\">\r\n        <h3 className=\"font-bold mb-2\">Add New Crop</h3>\r\n        {formError && <div className=\"error-box\">{formError}</div>}\r\n        {successMsg && <div className=\"toast-success\">{successMsg}</div>}\r\n  <input name=\"name\" placeholder=\"Crop Name\" value={form.name} onChange={handleChange} required />\r\n  <input type=\"file\" accept=\"image/*\" onChange={handlePicChange} />\r\n  {picPreview && <img src={picPreview} alt=\"Preview\" style={{maxWidth:100, marginBottom:8}} />}\r\n        <input name=\"land_size\" placeholder=\"Land Size (acre)\" value={form.land_size} onChange={handleChange} required />\r\n        <input name=\"cultivate_date\" type=\"date\" value={form.cultivate_date} onChange={handleChange} required />\r\n        <input name=\"harvest_date\" type=\"date\" value={form.harvest_date} onChange={handleChange} required />\r\n        <input name=\"total_cost\" type=\"number\" placeholder=\"Total Cost\" value={form.total_cost} onChange={handleChange} required />\r\n        <button type=\"submit\" className=\"mt-2 bg-green-500 text-white px-3 py-1 rounded\">Add Crop</button>\r\n      </form>\r\n\r\n      {/* Crop List */}\r\n      <h3 className=\"font-bold mb-2\">My Crops</h3>\r\n      {crops.length === 0 ? (\r\n        <p>No crops added yet.</p>\r\n      ) : (\r\n        <div className=\"grid gap-4\">\r\n          {crops.map((crop) => {\r\n            // Calculate growth percentage\r\n            let percent = 0;\r\n            if (crop.cultivate_date && crop.harvest_date) {\r\n              const start = new Date(crop.cultivate_date);\r\n              const end = new Date(crop.harvest_date);\r\n              const now = new Date();\r\n              if (end > start) {\r\n                const totalDays = (end - start) / (1000 * 60 * 60 * 24);\r\n                const elapsedDays = (now - start) / (1000 * 60 * 60 * 24);\r\n                percent = Math.min(100, Math.max(0, ((elapsedDays / totalDays) * 100).toFixed(2)));\r\n              }\r\n            }\r\n            const canHarvest = percent >= 80;\r\n            const requests = requestsMap[crop.id] || [];\r\n            return (\r\n              <div key={crop.id} className=\"p-3 border rounded\" style={{ position: 'relative', minHeight: 220 }}>\r\n                {/* Top left: number of dealer requests */}\r\n                <div style={{ position: 'absolute', top: 10, left: 10, background: '#26c6da', color: '#fff', borderRadius: '50%', width: 32, height: 32, display: 'flex', alignItems: 'center', justifyContent: 'center', fontWeight: 700, fontSize: 18 }}>\r\n                  {requests.length}\r\n                </div>\r\n                {/* Crop image */}\r\n                {crop.crop_pic && <img src={crop.crop_pic} alt=\"Crop\" style={{maxWidth:100, marginBottom:8, borderRadius:8}} />}\r\n                <p><strong>{crop.name}</strong></p>\r\n                <p>Land: {crop.land_size} acre</p>\r\n                <p>Cultivate: {crop.cultivate_date} | Harvest: {crop.harvest_date}</p>\r\n                <p>Total Cost: {crop.total_cost} Tk</p>\r\n                <p>Status: <span className=\"highlight\">{percent}% grown</span> {percent < 80 && \"(Cannot harvest before 80%)\"}</p>\r\n                {/* Dealer requests dropdown */}\r\n                {requests.length > 0 && (\r\n                  <div style={{ margin: '10px 0' }}>\r\n                    <button style={{ background: '#26a69a', color: '#fff', borderRadius: 6, padding: '6px 14px', fontWeight: 600 }} onClick={() => setSelectedRequests(s => ({ ...s, [crop.id]: !s[crop.id] }))}>\r\n                      Dealer Requests ▼\r\n                    </button>\r\n                    {selectedRequests[crop.id] && (\r\n                      <div style={{ background: '#f0f0f0', borderRadius: 8, marginTop: 8, padding: 8 }}>\r\n                        {requests.map(req => (\r\n                          <div key={req.id} style={{ marginBottom: 8, borderBottom: '1px solid #ddd', paddingBottom: 6 }}>\r\n                            <div><strong>Dealer:</strong> {req.dealer_name || req.dealer_id}</div>\r\n                            <div><strong>Price:</strong> {req.bid_price} Tk</div>\r\n                            <div><strong>Quantity:</strong> {req.requested_quantity} {req.unit}</div>\r\n                            <div><strong>Phone:</strong> {req.dealer_phone}</div>\r\n                            <div><strong>Address:</strong> {req.dealer_address}</div>\r\n                            <button style={{ background: '#43a047', color: '#fff', borderRadius: 6, padding: '4px 10px', marginTop: 6 }} onClick={() => setDealPopup({ request: req, crop })}>Accept</button>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {/* ...existing buttons... */}\r\n                <button\r\n                  onClick={() => {\r\n                    const newCost = prompt(\"Update total cost:\", crop.total_cost);\r\n                    if (newCost !== null && newCost !== \"\") handleUpdateCrop(crop.id, { total_cost: newCost });\r\n                  }}\r\n                  className=\"mr-2 bg-yellow-500 text-white px-2 py-1 rounded\"\r\n                >\r\n                  Update Cost\r\n                </button>\r\n                <button\r\n                  onClick={() => handleDeleteCrop(crop.id)}\r\n                  className=\"mr-2 bg-red-500 text-white px-2 py-1 rounded\"\r\n                >\r\n                  Delete\r\n                </button>\r\n                <button\r\n                  onClick={() => setHarvestCrop(crop)}\r\n                  className=\"bg-blue-500 text-white px-2 py-1 rounded\"\r\n                  disabled={!canHarvest}\r\n                  title={!canHarvest ? \"You can only harvest when crop is at least 80% grown.\" : \"Harvest\"}\r\n                >\r\n                  Harvest\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n  {/* Deal Done Popup */}\r\n  {dealPopup && (\r\n    <div className=\"popup\">\r\n      <h3>🎉 Congratulations! Deal Done</h3>\r\n      <p>Dealer <strong>{dealPopup.request.dealer_name || dealPopup.request.dealer_id}</strong> will buy <strong>{dealPopup.request.requested_quantity} {dealPopup.request.unit}</strong> of <strong>{dealPopup.crop.name}</strong> at <strong>{dealPopup.request.bid_price} Tk</strong>.</p>\r\n      <button onClick={() => {\r\n        // Generate PDF\r\n        const doc = new jsPDF();\r\n        doc.setFontSize(18);\r\n        doc.text('AgroVision Deal Confirmation', 20, 20);\r\n        doc.setFontSize(12);\r\n        doc.text(`Date: ${new Date().toLocaleDateString()}`, 20, 30);\r\n        doc.text(`Farmer: ${user.name} (ID: ${user.id})`, 20, 40);\r\n        doc.text(`Dealer: ${dealPopup.request.dealer_name || dealPopup.request.dealer_id}`, 20, 50);\r\n        doc.text(`Dealer Phone: ${dealPopup.request.dealer_phone}`, 20, 60);\r\n        doc.text(`Dealer Address: ${dealPopup.request.dealer_address}`, 20, 70);\r\n        doc.text(`Crop: ${dealPopup.crop.name}`, 20, 80);\r\n        doc.text(`Quantity: ${dealPopup.request.requested_quantity} ${dealPopup.request.unit}`, 20, 90);\r\n        doc.text(`Price: ${dealPopup.request.bid_price} Tk`, 20, 100);\r\n        doc.text(`Land Size: ${dealPopup.crop.land_size} acre`, 20, 110);\r\n        doc.text(`Cultivate Date: ${dealPopup.crop.cultivate_date}`, 20, 120);\r\n        doc.text(`Harvest Date: ${dealPopup.crop.harvest_date}`, 20, 130);\r\n        doc.text(`Total Cost: ${dealPopup.crop.total_cost} Tk`, 20, 140);\r\n        doc.save(`deal_request_${dealPopup.request.id}_${Date.now()}.pdf`);\r\n        setDealPopup(null);\r\n      }}>Download PDF</button>\r\n      <button style={{ marginLeft: 10 }} onClick={() => setDealPopup(null)}>Close</button>\r\n    </div>\r\n  )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Harvest Modal */}\r\n      {harvestCrop && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-box\">\r\n            <button className=\"close-btn\" onClick={() => setHarvestCrop(null)} style={{float:'right'}}>×</button>\r\n            <h3>Harvest {harvestCrop.name}</h3>\r\n            {harvestError && <div className=\"error-box\">{harvestError}</div>}\r\n            {harvestSuccess && <div className=\"toast-success\">{harvestSuccess}</div>}\r\n            <form onSubmit={handleHarvestSubmit}>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Quantity\"\r\n                value={harvestForm.quantity}\r\n                onChange={(e) => setHarvestForm({ ...harvestForm, quantity: e.target.value })}\r\n                required\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Price per unit/kg\"\r\n                value={harvestForm.price}\r\n                onChange={(e) => setHarvestForm({ ...harvestForm, price: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"modal-actions\">\r\n                <button type=\"button\" onClick={() => setHarvestCrop(null)} className=\"cancel-btn\">\r\n                  Cancel\r\n                </button>\r\n                <button type=\"submit\" className=\"confirm-btn\">\r\n                  Add to Marketplace\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}